{
    "swagger": "2.0",
    "info": {
        "version": "v1",
        "title": "Ecosystem API"
    },
    "host": "localhost:39026",
    "schemes": [
        "http"
    ],
    "paths": {
        "/v1/accounts/{accountId}/branches": {
            "get": {
                "tags": [
                    "Account Branches"
                ],
                "summary": "Gets user's filtered branches",
                "operationId": "AccountBranches_GetUserBranchesAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "accountId",
                        "in": "path",
                        "description": "Account Identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[AccountBranchModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "404": {
                        "description": "Requested account not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            },
            "put": {
                "tags": [
                    "Account Branches"
                ],
                "summary": "Adds branches to ecosystem user",
                "operationId": "AccountBranches_AssingBranchesToUserAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "accountId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "branches",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BranchAssignationModel"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[BranchAssignationResult]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "404": {
                        "description": "Requested resource not found."
                    },
                    "409": {
                        "description": "Conflict detected."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            },
            "delete": {
                "tags": [
                    "Account Branches"
                ],
                "summary": "Removes brach from user.",
                "operationId": "AccountBranches_UnassignUserFromBranchesAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "accountId",
                        "in": "path",
                        "description": "Account Identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "identifiers",
                        "in": "body",
                        "description": "Branches identifiers.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BranchIdentifiersModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "404": {
                        "description": "Requested resource not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            }
        },
        "/v1/accounts/{accountId}/courses": {
            "get": {
                "tags": [
                    "Account Courses"
                ],
                "summary": "Gets user's filtered courses",
                "operationId": "AccountCourses_GetUserCoursesAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "accountId",
                        "in": "path",
                        "description": "Account Identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[SimplifiedCourseModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "404": {
                        "description": "Requested account not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            },
            "put": {
                "tags": [
                    "Account Courses"
                ],
                "summary": "Adds courses to user",
                "operationId": "AccountCourses_AssignCoursesToUserAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "accountId",
                        "in": "path",
                        "description": "Account identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "identifiers",
                        "in": "body",
                        "description": "Course identifiers.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CourseIdentifiersModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[CourseAssignationResult]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "404": {
                        "description": "Requested resource not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            },
            "delete": {
                "tags": [
                    "Account Courses"
                ],
                "summary": "Removes course from course.",
                "operationId": "AccountCourses_UnassignCoursesFromUserAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "accountId",
                        "in": "path",
                        "description": "Account Identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "identifiers",
                        "in": "body",
                        "description": "Course identifiers.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CourseIdentifiersModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "404": {
                        "description": "Requested resource not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            }
        },
        "/v1/accounts/{accountId}/learningplans": {
            "get": {
                "tags": [
                    "Account Learning Plans"
                ],
                "summary": "Gets user's filtered learning plans",
                "operationId": "AccountLearningPlans_GetUserLearningPlansAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "accountId",
                        "in": "path",
                        "description": "Account Identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[SimplifiedLearningPlan]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "404": {
                        "description": "Requested account not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            },
            "put": {
                "tags": [
                    "Account Learning Plans"
                ],
                "summary": "Adds learning plans to ecosystem user",
                "operationId": "AccountLearningPlans_AssingLearningPlansToUserAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "accountId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "learningPlansIds",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LearningPlansIdentifierModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[LearningPlanAssignationModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "404": {
                        "description": "Requested account not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            },
            "delete": {
                "tags": [
                    "Account Learning Plans"
                ],
                "summary": "Removes user from learning plans.",
                "operationId": "AccountLearningPlans_UnassignUserFromLearningPlansAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "accountId",
                        "in": "path",
                        "description": "Account Identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "identifiers",
                        "in": "body",
                        "description": "User identifiers.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LearningPlansIdentifierModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "404": {
                        "description": "Requested resource not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            }
        },
        "/v1/accounts/{accountId}/roles": {
            "get": {
                "tags": [
                    "Account Roles"
                ],
                "summary": "Gets user's filtered roles",
                "operationId": "AccountRoles_GetUserRolesAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "accountId",
                        "in": "path",
                        "description": "Account Identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[RoleModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "404": {
                        "description": "Requested account not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            },
            "put": {
                "tags": [
                    "Account Roles"
                ],
                "summary": "Adds roles to user",
                "operationId": "AccountRoles_AssignRolesToUserAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "accountId",
                        "in": "path",
                        "description": "Account identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "identifiers",
                        "in": "body",
                        "description": "Role identifiers.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RoleIdentifiersModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[RoleAssignationModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "404": {
                        "description": "Requested resource not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            },
            "delete": {
                "tags": [
                    "Account Roles"
                ],
                "summary": "Removes user from user.",
                "operationId": "AccountRoles_UnassignUserFromRolesAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "accountId",
                        "in": "path",
                        "description": "Account Identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "identifiers",
                        "in": "body",
                        "description": "User identifiers.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RoleIdentifiersModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "404": {
                        "description": "Requested resource not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            }
        },
        "/v1/accounts/{accountId}/scopes": {
            "get": {
                "tags": [
                    "Account Scopes"
                ],
                "summary": "Gets user's filtered scopes",
                "operationId": "AccountScopes_GetUserScopesAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "accountId",
                        "in": "path",
                        "description": "Account Identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[ScopeModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "404": {
                        "description": "Requested account not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            },
            "put": {
                "tags": [
                    "Account Scopes"
                ],
                "summary": "Adds scopes to user",
                "operationId": "AccountScopes_AssignScopesToUserAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "accountId",
                        "in": "path",
                        "description": "Account identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "identifiers",
                        "in": "body",
                        "description": "Scope identifiers.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScopeIdentifiersModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[ScopeAssignationModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "404": {
                        "description": "Requested resource not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            },
            "delete": {
                "tags": [
                    "Account Scopes"
                ],
                "summary": "Removes scopes from user.",
                "operationId": "AccountScopes_UnassignUserFromScopesAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "accountId",
                        "in": "path",
                        "description": "Account Identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "identifiers",
                        "in": "body",
                        "description": "User identifiers.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScopeIdentifiersModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "404": {
                        "description": "Requested resource not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            }
        },
        "/v1/accounts": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Gets filtered accounts",
                "operationId": "Accounts_GetAllAccountsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[AccountModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            },
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Creates new account",
                "operationId": "Accounts_CreateAccountAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "account",
                    "in": "body",
                    "description": "Account.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/CreateAccountModel"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Account successfully created.",
                        "schema": {
                            "$ref": "#/definitions/DataResult[AccountModel]"
                        }
                    },
                    "400": {
                        "description": "Account is invalid."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            }
        },
        "/v1/accounts/{accountId}": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Gets account by identifier",
                "operationId": "Accounts_GetAccountByIdAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "accountId",
                    "in": "path",
                    "description": "Account Identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[AccountModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "404": {
                        "description": "Requested account not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            },
            "delete": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Removes account",
                "operationId": "Accounts_RemoveAccountAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "accountId",
                    "in": "path",
                    "description": "Account identifier.",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }],
                "responses": {
                    "204": {
                        "description": "Account successfully removed."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "404": {
                        "description": "Requested account not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            },
            "patch": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Updates account",
                "operationId": "Accounts_UpdateAccountAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "accountId",
                        "in": "path",
                        "description": "Account identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "patch",
                        "in": "body",
                        "description": "Properties to update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateAccountModel"
                        },
                        "type": "object"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[AccountModel]"
                        }
                    },
                    "400": {
                        "description": "Invalid update model."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "404": {
                        "description": "Requested account not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            }
        },
        "/v1/accounts/{accountId}/password": {
            "put": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Updates account password",
                "operationId": "Accounts_UpdatePasswordAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "accountId",
                        "in": "path",
                        "description": "Account identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "updatePassword",
                        "in": "body",
                        "description": "Update password model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdatePasswordModel"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Account password updated successfully."
                    },
                    "400": {
                        "description": "Update password model is invalid."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "404": {
                        "description": "Requested account not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            }
        },
        "/v1/branches/users": {
            "get": {
                "tags": [
                    "Branch Users"
                ],
                "summary": "Gets branch users recursive.",
                "operationId": "BranchUsers_GetBranchUsersAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "branchId",
                        "in": "query",
                        "description": "Branch identifier.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "branchCode",
                        "in": "query",
                        "description": "Branch code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[UserModel]"
                        }
                    },
                    "400": {
                        "description": "Validation errors."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Requested branch not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "branches.users:read"
                ],
                "roles": []
            }
        },
        "/v1/branches/{branchId}/users": {
            "put": {
                "tags": [
                    "Branch Users"
                ],
                "summary": "Assigns users to branch.",
                "operationId": "BranchUsers_AssignUsersToBranchAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "branchId",
                        "in": "path",
                        "description": "Branch identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "identifiers",
                        "in": "body",
                        "description": "User identifiers.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserIdentifiersModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[UserAssignationModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Requested branch not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "branches.users:create"
                ],
                "roles": []
            },
            "delete": {
                "tags": [
                    "Branch Users"
                ],
                "summary": "Removes users from branch.",
                "operationId": "BranchUsers_RemoveUsersFromBranchAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "branchId",
                        "in": "path",
                        "description": "Branch Identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "identifiers",
                        "in": "body",
                        "description": "User identifiers.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserIdentifiersModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Requested branch or users not found."
                    },
                    "409": {
                        "description": "Conflict detected."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "branches.users:delete"
                ],
                "roles": []
            }
        },
        "/v1/branches/{branchId}/users/cache": {
            "put": {
                "tags": [
                    "Branch Users"
                ],
                "summary": "Assigns users to branch.",
                "operationId": "BranchUsers_SynchronizeBranchUsersAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "branchId",
                        "in": "path",
                        "description": "Branch identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "identifiers",
                        "in": "body",
                        "description": "User identifiers.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserIdentifiersModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[SynchronizationModel]"
                        }
                    },
                    "400": {
                        "description": "Invalid identifier."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Requested branch not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "branches.users:create"
                ],
                "roles": [
                    "System,SuperUser"
                ]
            },
            "delete": {
                "tags": [
                    "Branch Users"
                ],
                "summary": "Removes desynchronized users from branch.",
                "operationId": "BranchUsers_RemoveDesynchronizedBranchUsersAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "branchId",
                        "in": "path",
                        "description": "Branch Identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "identifiers",
                        "in": "body",
                        "description": "User identifiers.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserIdentifiersModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Requested branch not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "branches.users:delete"
                ],
                "roles": [
                    "System,SuperUser"
                ]
            }
        },
        "/v1/branches": {
            "get": {
                "tags": [
                    "Branches"
                ],
                "summary": "Gets filtered branches",
                "operationId": "Branches_GetAllBranchesAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "code",
                        "in": "query",
                        "description": "Branch Code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Branches returned successfully.",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[BranchModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "branches:read"
                ],
                "roles": []
            },
            "post": {
                "tags": [
                    "Branches"
                ],
                "summary": "Creates new branch",
                "operationId": "Branches_CreateBranchAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "branch",
                    "in": "body",
                    "description": "Branch",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/CreateBranchModel"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[BranchModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access parent resource."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "branches:create"
                ],
                "roles": []
            }
        },
        "/v1/branches/{branchId}/descendants": {
            "get": {
                "tags": [
                    "Branches"
                ],
                "summary": "Gets branch's descendants.",
                "operationId": "Branches_GetAllChildBranchesAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "branchId",
                        "in": "path",
                        "description": "Branch Identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[BranchModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Requested branch not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "branches:read"
                ],
                "roles": []
            }
        },
        "/v1/branches/{branchId}": {
            "get": {
                "tags": [
                    "Branches"
                ],
                "summary": "Gets branch by identifier",
                "operationId": "Branches_GetBranchByIdAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "branchId",
                    "in": "path",
                    "description": "Branch Identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[BranchModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Requested branch not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "branches:read"
                ],
                "roles": []
            },
            "delete": {
                "tags": [
                    "Branches"
                ],
                "summary": "Removes branch",
                "operationId": "Branches_RemoveBranchAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "branchId",
                    "in": "path",
                    "description": "Branch Identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Requested branch not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "branches:delete"
                ],
                "roles": []
            },
            "patch": {
                "tags": [
                    "Branches"
                ],
                "summary": "Updates branch",
                "operationId": "Branches_UpdateBranchAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "branchId",
                        "in": "path",
                        "description": "Branch Identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "patch",
                        "in": "body",
                        "description": "Properties to update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateBranchModel"
                        },
                        "type": "object"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[BranchModel]"
                        }
                    },
                    "400": {
                        "description": "Invalid update model."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Requested branch not found."
                    },
                    "409": {
                        "description": "Conflict detected."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "branches:update"
                ],
                "roles": []
            }
        },
        "/v1/branches/{branchId}/cache": {
            "put": {
                "tags": [
                    "Branches"
                ],
                "summary": "Synchronizes branch",
                "operationId": "Branches_SynchronizeBranchAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "branchId",
                        "in": "path",
                        "description": "Branch Identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "branch",
                        "in": "body",
                        "description": "Branch.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SaveBranchModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "System,SuperUser"
                ]
            },
            "delete": {
                "tags": [
                    "Branches"
                ],
                "summary": "Removes desynchronized branch",
                "operationId": "Branches_RemoveDesynchronizedBranchAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "branchId",
                    "in": "path",
                    "description": "Branch Identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "System,SuperUser"
                ]
            }
        },
        "/v1/branches/summary": {
            "get": {
                "tags": [
                    "Branches Summary"
                ],
                "summary": "Gets branch summary for specified branch",
                "operationId": "BranchesSummary_GetBranchSummaryAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "branchId",
                        "in": "query",
                        "description": "Branch identifier.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "branchCode",
                        "in": "query",
                        "description": "Branch code",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[BranchSummaryModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Requested resource not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "users:read",
                    "learningplans:read",
                    "users.learningobjects:read"
                ],
                "roles": []
            }
        },
        "/v1/courses/enrollments": {
            "get": {
                "tags": [
                    "Course Enrollments"
                ],
                "summary": "Gets enrollments",
                "operationId": "CourseEnrollments_GetEnrollmentsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[CourseEnrollmentModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "courses.enrollments:read"
                ],
                "roles": [
                    "System,SuperUser"
                ]
            }
        },
        "/v1/courses/{courseId}/enrollments": {
            "get": {
                "tags": [
                    "Course Enrollments"
                ],
                "summary": "Gets course enrollments",
                "operationId": "CourseEnrollments_GetCourseEnrollmentsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "courseId",
                        "in": "path",
                        "description": "Course identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[CourseEnrollmentModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "courses.enrollments:read"
                ],
                "roles": []
            }
        },
        "/v1/users/{userId}/courses/enrollments": {
            "get": {
                "tags": [
                    "Course Enrollments"
                ],
                "summary": "Gets user's course enrollments",
                "operationId": "CourseEnrollments_GetUserCourseEnrollmentsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[CourseEnrollmentModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "courses.enrollments:read"
                ],
                "roles": []
            }
        },
        "/v1/courses/{courseId}/enrollments/users": {
            "put": {
                "tags": [
                    "Course Enrollments"
                ],
                "summary": "Enrolls users to course by identifier.",
                "operationId": "CourseEnrollments_EnrollUsersToCourseByIdAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "courseId",
                        "in": "path",
                        "description": "Course identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "users",
                        "in": "body",
                        "description": "User identifiers.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserIdentifiersModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[UserAssignationModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Course or users not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "courses.enrollments:create"
                ],
                "roles": []
            },
            "delete": {
                "tags": [
                    "Course Enrollments"
                ],
                "summary": "Unenrolls users from the course.",
                "operationId": "CourseEnrollments_UnenrollUsersFromCourseAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "courseId",
                        "in": "path",
                        "description": "Course identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "users",
                        "in": "body",
                        "description": "User identifiers.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserIdentifiersModel"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Everything worked as expected."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Course or users not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "courses.enrollments:delete"
                ],
                "roles": []
            }
        },
        "/v1/courses/{courseCode}/enrollments/users": {
            "put": {
                "tags": [
                    "Course Enrollments"
                ],
                "summary": "Enrolls users to course by code.",
                "operationId": "CourseEnrollments_EnrollUsersToCourseByCodeAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "courseCode",
                        "in": "path",
                        "description": "Course code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "users",
                        "in": "body",
                        "description": "User identifiers.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserIdentifiersModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[UserAssignationModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Course or users not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "courses.enrollments:create"
                ],
                "roles": []
            }
        },
        "/v1/courses/{courseId}/enrollments/cache": {
            "put": {
                "tags": [
                    "Course Enrollments"
                ],
                "summary": "Synchronized course entollments",
                "operationId": "CourseEnrollments_SynchronizeCourseEnrollmentsAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "courseId",
                        "in": "path",
                        "description": "Course identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "enrollment",
                        "in": "body",
                        "description": "Enrollment",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EnrollmentModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Invalid identifier."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "System,SuperUser"
                ]
            },
            "delete": {
                "tags": [
                    "Course Enrollments"
                ],
                "summary": "Removes desynchronized course enrollments.",
                "operationId": "CourseEnrollments_RemoveDesynchronizedCourseEnrollmentsAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "courseId",
                        "in": "path",
                        "description": "Course identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "users",
                        "in": "body",
                        "description": "User identifiers.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserIdentifiersModel"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Everything worked as expected."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "System,SuperUser"
                ]
            }
        },
        "/v1/courses/summary": {
            "get": {
                "tags": [
                    "Course Summary"
                ],
                "summary": "Gets branch's courses summary by branch identifier",
                "operationId": "CourseSummary_GetBranchCoursesSummaryAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "branchId",
                        "in": "query",
                        "description": "Branch identifier.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "branchCode",
                        "in": "query",
                        "description": "Branch code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "learningPlanId",
                        "in": "query",
                        "description": "Learning plan identifier",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "learningPlanCode",
                        "in": "query",
                        "description": "Learning plan code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[BranchCourseSummaryModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Requested resource not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "branches.courses:read"
                ],
                "roles": []
            }
        },
        "/v1/courses": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Gets courses.",
                "operationId": "Courses_GetCoursesAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "code",
                        "in": "query",
                        "description": "Code.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[CourseModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "courses:read"
                ],
                "roles": []
            }
        },
        "/v1/users/{userId}/courses": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Gets user courses.",
                "operationId": "Courses_GetUserCoursesAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[CourseModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "404": {
                        "description": "User not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "users.courses:read"
                ],
                "roles": []
            }
        },
        "/v1/branches/{branchId}/courses": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Gets branch courses.",
                "operationId": "Courses_GetBranchCoursesAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "branchId",
                        "in": "path",
                        "description": "Branch identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[CourseModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "404": {
                        "description": "Requested branch not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "branches.courses:read"
                ],
                "roles": []
            }
        },
        "/v1/courses/{id}": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Gets course by identifier",
                "operationId": "Courses_GetCourseByIdAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Course identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[CourseModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Course not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "courses:read"
                ],
                "roles": []
            }
        },
        "/v1/courses/{id}/cache": {
            "put": {
                "tags": [
                    "Courses"
                ],
                "summary": "Synchronizes course",
                "operationId": "Courses_SynchronizeCourseAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "Course identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "course",
                        "in": "body",
                        "description": "Course to synchronize {Gel.Ecosystem.Contracts.Courses.CourseSaveModel}",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CourseSaveModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Invalid identifier."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "System,SuperUser"
                ]
            },
            "delete": {
                "tags": [
                    "Courses"
                ],
                "summary": "Remove desynchronized course",
                "operationId": "Courses_RemoveDesynchronizedCourseAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Id of the course",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "404": {
                        "description": "Course not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "System,SuperUser"
                ]
            }
        },
        "/v1/branches/leaderboards": {
            "get": {
                "tags": [
                    "Leaderboards"
                ],
                "summary": "Gets branch leaderboard.",
                "operationId": "Leaderboards_GetBranchLeaderboardAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "rankType",
                        "in": "query",
                        "description": "Position type strategy.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "denseRank",
                            "competitionRank"
                        ]
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "UserId.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "branchId",
                        "in": "query",
                        "description": "Branch identifier.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "branchCode",
                        "in": "query",
                        "description": "Branch code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedDataResult[LeaderboardModel]"
                        }
                    },
                    "400": {
                        "description": "Validation errors."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Requested branch or user not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "branches.users:read"
                ],
                "roles": []
            }
        },
        "/v1/leaderboards/positions": {
            "get": {
                "tags": [
                    "Leaderboards"
                ],
                "summary": "Gets leaderboard user positions.",
                "operationId": "Leaderboards_GetLeaderboardPositionsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[LeaderboardPositionModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "System,SuperUser"
                ]
            }
        },
        "/v1/leaderboards/positions/{userid}/cache": {
            "put": {
                "tags": [
                    "Leaderboards"
                ],
                "summary": "Synchronizes leaderboard user position.",
                "operationId": "Leaderboards_SynchronizeLeaderboardPositionAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "userid",
                        "in": "path",
                        "description": "User identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "leaderboardPosition",
                        "in": "body",
                        "description": "Leaderboard position.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LeaderboardPositionSaveModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Invalid identifier."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "System,SuperUser"
                ]
            },
            "delete": {
                "tags": [
                    "Leaderboards"
                ],
                "summary": "Removes desynchronized leaderboard user position.",
                "operationId": "Leaderboards_RemoveDesynchronizedLeaderboardPositionAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "userid",
                    "in": "path",
                    "description": "User identifier.",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "404": {
                        "description": "User not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "System,SuperUser"
                ]
            }
        },
        "/v1/users/{userId}/progress": {
            "get": {
                "tags": [
                    "Learning Object Progress"
                ],
                "summary": "Gets user's learning objects progress.",
                "operationId": "LearningObjectProgress_GetUserProgressAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[LearningObjectProgressModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "User not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "users.learningobjects:read"
                ],
                "roles": []
            }
        },
        "/v1/users/{userId}/courses/{courseId}/progress": {
            "get": {
                "tags": [
                    "Learning Object Progress"
                ],
                "summary": "Gets user's learning objects progress by course id.",
                "operationId": "LearningObjectProgress_GetUserCourseProgressAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "courseId",
                        "in": "path",
                        "description": "Course identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[LearningObjectProgressModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Course or user not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "users.learningobjects:read"
                ],
                "roles": []
            }
        },
        "/v1/users/progress": {
            "get": {
                "tags": [
                    "Learning Object Progress"
                ],
                "summary": "Gets learning objects progress.",
                "operationId": "LearningObjectProgress_GetProgressAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[LearningObjectProgressModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "users.learningobjects:read"
                ],
                "roles": [
                    "System,SuperUser"
                ]
            }
        },
        "/v1/users/{userId}/learningObjects/{learningObjectId}/progress/cache": {
            "put": {
                "tags": [
                    "Learning Object Progress"
                ],
                "summary": "Synchronizes learning object.",
                "operationId": "LearningObjectProgress_SynchronizeLearningObjectAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "learningObjectId",
                        "in": "path",
                        "description": "Learning object identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "learningObjectProgress",
                        "in": "body",
                        "description": "User's learning object progress.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LearningObjectProgressModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Invalid identifier."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "System,SuperUser"
                ]
            },
            "delete": {
                "tags": [
                    "Learning Object Progress"
                ],
                "summary": "Removes desynchronized learning object.",
                "operationId": "LearningObjectProgress_RemoveDesynchronizedAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "learningObjectId",
                        "in": "path",
                        "description": "Learning object identifier.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "404": {
                        "description": "Learning object not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "System,SuperUser"
                ]
            }
        },
        "/v1/learningobjects": {
            "get": {
                "tags": [
                    "Learning Objects"
                ],
                "summary": "Gets learning objects.",
                "operationId": "LearningObjects_GetLearningObjectsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[LearningObjectModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "courses.learningobjects:read"
                ],
                "roles": []
            }
        },
        "/v1/courses/{courseId}/learningobjects": {
            "get": {
                "tags": [
                    "Learning Objects"
                ],
                "summary": "Gets course learning objects.",
                "operationId": "LearningObjects_GetCourseLearningObjectsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "courseId",
                    "in": "path",
                    "description": "Course identifier.",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[IEnumerable[DetailedLearningObjectModel]]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Course not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "courses.learningobjects:read"
                ],
                "roles": []
            }
        },
        "/v1/learningobjects/{learningObjectId}": {
            "get": {
                "tags": [
                    "Learning Objects"
                ],
                "summary": "Gets learning object.",
                "operationId": "LearningObjects_GetLearningObjectAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "learningObjectId",
                    "in": "path",
                    "description": "Learning object identifier.",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[DetailedLearningObjectModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Learning object not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "courses.learningobjects:read"
                ],
                "roles": []
            }
        },
        "/v1/learningobjects/{id}/cache": {
            "put": {
                "tags": [
                    "Learning Objects"
                ],
                "summary": "Synchronizes learning object.",
                "operationId": "LearningObjects_SynchronizeLearningObjectAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "Learning object identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "learningObject",
                        "in": "body",
                        "description": "Learning object.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LearningObjectModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Invalid identifier."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "System,SuperUser"
                ]
            },
            "delete": {
                "tags": [
                    "Learning Objects"
                ],
                "summary": "Removes desynchronized learning object.",
                "operationId": "LearningObjects_RemoveDesynchronizedAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Learnign object identifier.",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "404": {
                        "description": "Learning object not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "System,SuperUser"
                ]
            }
        },
        "/v1/learningplans/{learningPlanId}/courses": {
            "get": {
                "tags": [
                    "Learning Plan Courses"
                ],
                "summary": "Gets learning plan courses.",
                "operationId": "LearningPlanCourses_GetLearningPlanCoursesAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "learningPlanId",
                        "in": "path",
                        "description": "Learning plan identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[CourseModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Requested learning plan not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "learningplans.courses:read"
                ],
                "roles": []
            }
        },
        "/v1/learningplans/{learningPlanId}/courses/cache": {
            "put": {
                "tags": [
                    "Learning Plan Courses"
                ],
                "summary": "Synchronizes learning plan courses.",
                "operationId": "LearningPlanCourses_SynchronizeLearningPlanCoursesAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "learningPlanId",
                        "in": "path",
                        "description": "Learning plan identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "courses",
                        "in": "body",
                        "description": "Courses.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdentifiersModel[Int32]"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[SynchronizationModel]"
                        }
                    },
                    "400": {
                        "description": "Invalid identifier."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "404": {
                        "description": "Requested learning plan not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "System,SuperUser"
                ]
            },
            "delete": {
                "tags": [
                    "Learning Plan Courses"
                ],
                "summary": "Removes desynchronized learning plan courses.",
                "operationId": "LearningPlanCourses_RemoveDesynchronizedLearningPlanCoursesAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "learningPlanId",
                        "in": "path",
                        "description": "Learning plan identifer.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "courses",
                        "in": "body",
                        "description": "Courses.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdentifiersModel[Int32]"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "404": {
                        "description": "Requested learning plan not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "System,SuperUser"
                ]
            }
        },
        "/v1/learningplans/enrollments": {
            "get": {
                "tags": [
                    "Learning Plan Enrollments"
                ],
                "summary": "Gets entollments.",
                "operationId": "LearningPlanEnrollments_GetEnrollmentsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[LearningPlanEnrollmentModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "learningplans.enrollments:read"
                ],
                "roles": [
                    "System,SuperUser"
                ]
            }
        },
        "/v1/learningplans/{learningPlanId}/enrollments": {
            "get": {
                "tags": [
                    "Learning Plan Enrollments"
                ],
                "summary": "Gets entollments by learning plan identifier.",
                "operationId": "LearningPlanEnrollments_GetEnrollmentsByLearningPlanIdAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "learningPlanId",
                        "in": "path",
                        "description": "Learning plan identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[LearningPlanEnrollmentModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Requested learning plan not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "learningplans.enrollments:read"
                ],
                "roles": []
            }
        },
        "/v1/learningplans/{learningPlanId}/enrollments/user": {
            "put": {
                "tags": [
                    "Learning Plan Enrollments"
                ],
                "summary": "Enrolls users to learning plan by identifier.",
                "operationId": "LearningPlanEnrollments_EnrollUserToLearningPlanByIdAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "learningPlanId",
                        "in": "path",
                        "description": "Learning plan identirifer.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "Users identifiers.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserIdentifierModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "404"
                    },
                    "409": {
                        "description": "Conflict detected."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "learningplans.enrollments:create"
                ],
                "roles": []
            }
        },
        "/v1/learningplans/{learningPlanCode}/enrollments/user": {
            "put": {
                "tags": [
                    "Learning Plan Enrollments"
                ],
                "summary": "Enrolls users to learning plan by code.",
                "operationId": "LearningPlanEnrollments_EnrollUserToLearningPlanByCodeAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "learningPlanCode",
                        "in": "path",
                        "description": "Learning plan code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "Users identifiers.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserIdentifierModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "404"
                    },
                    "409": {
                        "description": "Conflict detected."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "learningplans.enrollments:create"
                ],
                "roles": []
            }
        },
        "/v1/learningplans/{learningPlanId}/enrollments/cache": {
            "put": {
                "tags": [
                    "Learning Plan Enrollments"
                ],
                "summary": "Synchronizes learning plans enrollments.",
                "operationId": "LearningPlanEnrollments_SynchronizeLearningPlanEnrollmentsAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "learningPlanId",
                        "in": "path",
                        "description": "Learning plan identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "enrollment",
                        "in": "body",
                        "description": "Enrollment.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EnrollmentModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Invalid identifier."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "System,SuperUser"
                ]
            },
            "delete": {
                "tags": [
                    "Learning Plan Enrollments"
                ],
                "summary": "Removes desynchronized learning plan enrollment.",
                "operationId": "LearningPlanEnrollments_RemoveDesychronizedUserLearningPlanAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "learningPlanId",
                        "in": "path",
                        "description": "Learning plan identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "Users identifiers.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserIdentifierModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "404": {
                        "description": "404"
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "System,SuperUser"
                ]
            }
        },
        "/v1/users/{userId}/learningplans/summary": {
            "get": {
                "tags": [
                    "Learning Plan Summary"
                ],
                "summary": "Gets user's learning plans summary by user identifier",
                "operationId": "LearningPlanSummary_GetUserLearningPlanSummaryAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "userId",
                    "in": "path",
                    "description": "User Identifier",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[IEnumerable[UserLearningPlanSummaryModel]]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "User not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "users:read",
                    "learningplans:read",
                    "learningplans.enrollments:read",
                    "learningplans.courses:read",
                    "courses.learningobjects:read"
                ],
                "roles": []
            }
        },
        "/v1/users/{userId}/learningplans/{learningPlanId}/summary": {
            "get": {
                "tags": [
                    "Learning Plan Summary"
                ],
                "summary": "Gets user's learning plans details summary by user identifier",
                "operationId": "LearningPlanSummary_GetUserLearningPlanDetailSummaryAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "userId",
                        "in": "path",
                        "description": "User Identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "learningPlanId",
                        "in": "path",
                        "description": "Learning Plan Identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[IEnumerable[UserLearningPlanDetailSummaryModel]]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Requested resource not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "users:read",
                    "learningplans:read",
                    "learningplans.enrollments:read",
                    "learningplans.courses:read",
                    "courses.learningobjects:read"
                ],
                "roles": []
            }
        },
        "/v1/learningplans/{learningPlanId}/summary": {
            "get": {
                "tags": [
                    "Learning Plan Summary"
                ],
                "summary": "Gets learning plan summary for specified branch",
                "operationId": "LearningPlanSummary_GetBranchLearningPlanSummaryAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "learningPlanId",
                        "in": "path",
                        "description": "Learning Plan Identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "branchId",
                        "in": "query",
                        "description": "Branch identifier.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "branchCode",
                        "in": "query",
                        "description": "Branch code",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[BranchLearningPlanDetailSummaryModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Requested resource not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "users:read",
                    "learningplans:read",
                    "users.learningobjects:read"
                ],
                "roles": []
            }
        },
        "/v1/learningplans/summary": {
            "get": {
                "tags": [
                    "Learning Plan Summary"
                ],
                "summary": "Gets summary of learning plans  for specified branch.",
                "operationId": "LearningPlanSummary_GetBranchLearningPlansSummaryAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "branchId",
                        "in": "query",
                        "description": "Branch identifier.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "branchCode",
                        "in": "query",
                        "description": "Branch code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[BranchLearningPlanDetailSummaryModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Requested resource not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "users:read",
                    "learningplans:read",
                    "users.learningobjects:read"
                ],
                "roles": []
            }
        },
        "/v1/learningplans": {
            "get": {
                "tags": [
                    "Learning Plans"
                ],
                "summary": "Gets learning plans.",
                "operationId": "LearningPlans_GetLearningPlansAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "code",
                        "in": "query",
                        "description": "Code.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[LearningPlanModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "learningplans:read"
                ],
                "roles": []
            }
        },
        "/v1/learningplans/{learningPlanId}": {
            "get": {
                "tags": [
                    "Learning Plans"
                ],
                "summary": "Gets learning plan by identifier.",
                "operationId": "LearningPlans_GetLearningPlanAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "learningPlanId",
                    "in": "path",
                    "description": "Learning plan identifier.",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[LearningPlanModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "404": {
                        "description": "Requested learning plan not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "learningplans:read"
                ],
                "roles": []
            }
        },
        "/v1/learningplans/{id}/cache": {
            "put": {
                "tags": [
                    "Learning Plans"
                ],
                "summary": "Synchronizes learning plan.",
                "operationId": "LearningPlans_SynchronizeLearningPlan",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "Learning plan identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "learningPlan",
                        "in": "body",
                        "description": "Learning plan.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LearningPlanModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Invalid identifier."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "System,SuperUser"
                ]
            },
            "delete": {
                "tags": [
                    "Learning Plans"
                ],
                "summary": "Removes desynchronized learning plan.",
                "operationId": "LearningPlans_RemoveDesynchronizedAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Learning plan identifier.",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "404": {
                        "description": "Requested learning plan not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "System,SuperUser"
                ]
            }
        },
        "/v1/platform/jobs/{id}": {
            "get": {
                "tags": [
                    "Platform"
                ],
                "summary": "Gets job.",
                "operationId": "Platform_GetJobAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Job identifier.",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "404": {
                        "description": "Job not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            },
            "put": {
                "tags": [
                    "Platform"
                ],
                "summary": "Updates job.",
                "operationId": "Platform_UpdateJobAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "Job identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "jobModel",
                        "in": "body",
                        "description": "Job model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Invalid identifier."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "System,SuperUser"
                ]
            }
        },
        "/v1/platform/statistics": {
            "get": {
                "tags": [
                    "Platform"
                ],
                "summary": "Gets LMS Platform Stats",
                "operationId": "Platform_GetPlatformStatisticsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[PlatformStatisticsModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            },
            "post": {
                "tags": [
                    "Platform"
                ],
                "summary": "Saved platform statistics.",
                "operationId": "Platform_SavePlatformStatisticsAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "platformStatistics",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/SavePlatformStatisticsModel"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PlatformStatisticsModel"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            }
        },
        "/v1/powerusers/{userId}/branches": {
            "put": {
                "tags": [
                    "Power User Branches"
                ],
                "summary": "Assign branch(es) to a power user.",
                "operationId": "PowerUserBranches_AssignBranchesToPowerUserAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "branches",
                        "in": "body",
                        "description": "Branches collection.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BranchAssignationModel"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[BranchAssignationResult]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "404": {
                        "description": "Requested resource not found."
                    },
                    "409": {
                        "description": "Conflict detected."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "powerusers.branches:create"
                ],
                "roles": [
                    "Admin,User"
                ]
            },
            "delete": {
                "tags": [
                    "Power User Branches"
                ],
                "summary": "Unassign branch(es) from a power user.",
                "operationId": "PowerUserBranches_UnassignBranchesFromUserAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "identifiers",
                        "in": "body",
                        "description": "Branch identifiers.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BranchIdentifiersModel"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Everything worked as expected."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "404": {
                        "description": "Requested resource not found."
                    },
                    "409": {
                        "description": "Conflict detected."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "powerusers.branches:delete"
                ],
                "roles": [
                    "Admin,User"
                ]
            }
        },
        "/v1/powerusers/{userId}/courses": {
            "put": {
                "tags": [
                    "Power User Courses"
                ],
                "summary": "Assign course(s) to a power user.",
                "operationId": "PowerUserCourses_AssignCoursesToPowerUserAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "identifiers",
                        "in": "body",
                        "description": "Course identifiers.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CourseIdentifiersModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[CourseAssignationResult]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "404": {
                        "description": "Requested resource not found."
                    },
                    "409": {
                        "description": "Conflict detected."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "powerusers.courses:create"
                ],
                "roles": [
                    "Admin,User"
                ]
            },
            "delete": {
                "tags": [
                    "Power User Courses"
                ],
                "summary": "Unassign course(s) from a power user.",
                "operationId": "PowerUserCourses_UnassignCoursesFromUserAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "identifiers",
                        "in": "body",
                        "description": "Course identifiers.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CourseIdentifiersModel"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Everything worked as expected."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "404": {
                        "description": "Requested resource not found."
                    },
                    "409": {
                        "description": "Conflict detected."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "powerusers.courses:delete"
                ],
                "roles": [
                    "Admin,User"
                ]
            }
        },
        "/v1/powerusers": {
            "post": {
                "tags": [
                    "Power Users"
                ],
                "summary": "Promotes a standard user to a power user.",
                "operationId": "PowerUsers_CreatePowerUserAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "powerUser",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/PowerUserCreateModel"
                    }
                }],
                "responses": {
                    "204": {
                        "description": "Everything worked as expected."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "409": {
                        "description": "Conflict detected."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "powerusers:create"
                ],
                "roles": [
                    "Admin,User"
                ]
            }
        },
        "/v1/powerusers/{userId}": {
            "delete": {
                "tags": [
                    "Power Users"
                ],
                "summary": "Demotes a power user to a standard user.",
                "operationId": "PowerUsers_RemoveUserAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "userId",
                    "in": "path",
                    "description": "User identifier.",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }],
                "responses": {
                    "204": {
                        "description": "Everything worked as expected."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "404": {
                        "description": "User not found."
                    },
                    "409": {
                        "description": "Conflict detected."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "powerusers:delete"
                ],
                "roles": [
                    "Admin,User"
                ]
            },
            "patch": {
                "tags": [
                    "Power Users"
                ],
                "summary": "Updates a power user.",
                "operationId": "PowerUsers_UpdateAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "patch",
                        "in": "body",
                        "description": "Properties to update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PowerUserUpdateModel"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Everything worked as expected."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "404": {
                        "description": "User not found."
                    },
                    "409": {
                        "description": "Conflict detected."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "powerusers:update"
                ],
                "roles": [
                    "Admin,User"
                ]
            }
        },
        "/v1/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Gets filtered roles",
                "operationId": "Roles_GetAllRolesAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[RoleModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            }
        },
        "/v1/scopes": {
            "get": {
                "tags": [
                    "Scopes"
                ],
                "summary": "Gets filtered scopes",
                "operationId": "Scopes_GetAllScopesAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[ScopeModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "Admin,SuperUser"
                ]
            }
        },
        "/v1/uploads": {
            "get": {
                "tags": [
                    "Uploads"
                ],
                "summary": "Gets link for file upload.",
                "operationId": "Uploads_GetUploadUrlAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "filename",
                        "in": "query",
                        "description": "Gets or sets upload options file name.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "mimeType",
                        "in": "query",
                        "description": "Gets or sets upload options mime type.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "collection",
                        "in": "query",
                        "description": "Gets or sets upload options collection.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UploadModel"
                        }
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                }
            }
        },
        "/v1/uploads/files": {
            "get": {
                "tags": [
                    "Uploads"
                ],
                "summary": "Gets uploaded file.",
                "operationId": "Uploads_GetFileUriAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "filename",
                        "in": "query",
                        "description": "Gets or sets upload options file name.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "mimeType",
                        "in": "query",
                        "description": "Gets or sets upload options mime type.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "collection",
                        "in": "query",
                        "description": "Gets or sets upload options collection.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UploadedFileModel"
                        }
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                }
            }
        },
        "/v1/urls/play": {
            "get": {
                "tags": [
                    "Urls"
                ],
                "summary": "Gets url of the resource.",
                "operationId": "Urls_GetPlayUrlAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "userId",
                        "in": "query",
                        "description": "User identifier",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "learningPlanId",
                        "in": "query",
                        "description": "Learning plan identifier",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "courseId",
                        "in": "query",
                        "description": "Course identifier",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "learningObjectId",
                        "in": "query",
                        "description": "Learning object identifier",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[UrlModel]"
                        }
                    },
                    "400": {
                        "description": "User not configured for playing resources."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Requested resource not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "users:read",
                    "learningplans.enrollments:read",
                    "courses.enrollments:read",
                    "courses.learningobjects:read"
                ],
                "roles": []
            }
        },
        "/v1/learningplans/{learningPlanId}/users/summary": {
            "get": {
                "tags": [
                    "User Summary"
                ],
                "summary": "Gets learning plan users summary for specified branch",
                "operationId": "UserSummary_GetLearningPlanUserSummaryAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "learningPlanId",
                        "in": "path",
                        "description": "Learning Plan Identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "branchId",
                        "in": "query",
                        "description": "Branch identifier.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "branchCode",
                        "in": "query",
                        "description": "Branch code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[UserSummaryModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Requested resource not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "users:read",
                    "learningplans:read",
                    "users.learningobjects:read"
                ],
                "roles": []
            }
        },
        "/v1/courses/{courseId}/users/summary": {
            "get": {
                "tags": [
                    "User Summary"
                ],
                "summary": "Gets course users summary for specified branch",
                "operationId": "UserSummary_GetCourseUserSummaryAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "courseId",
                        "in": "path",
                        "description": "Course Identifier",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "branchId",
                        "in": "query",
                        "description": "Branch identifier.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "branchCode",
                        "in": "query",
                        "description": "Branch code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[UserSummaryModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Requested resource not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "users:read",
                    "courses:read",
                    "users.learningobjects:read"
                ],
                "roles": []
            }
        },
        "/v1/branches/users/summary": {
            "get": {
                "tags": [
                    "User Summary"
                ],
                "summary": "Gets branch users summary for specified branch.",
                "operationId": "UserSummary_GetBranchUsersAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "branchId",
                        "in": "query",
                        "description": "Branch identifier.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "branchCode",
                        "in": "query",
                        "description": "Branch code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[UserSummaryModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "Requested resource not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "users:read"
                ],
                "roles": []
            }
        },
        "/v1/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Gets users.",
                "operationId": "Users_GetUsersAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "username",
                        "in": "query",
                        "description": "User name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email address",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page offset.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Page limit.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PagedCollectionResult[UserModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "users:read"
                ],
                "roles": []
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Creates new user.",
                "operationId": "Users_CreateUserAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "user",
                    "in": "body",
                    "description": "User.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/UserCreateModel"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[UserModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "users:create"
                ],
                "roles": []
            }
        },
        "/v1/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user by identifier.",
                "operationId": "Users_GetUserAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "User identifier.",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[UserModel]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "404": {
                        "description": "User not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "users:read"
                ],
                "roles": []
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Removes user.",
                "operationId": "Users_RemoveUserAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "User identifier.",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "404": {
                        "description": "User not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "users:delete"
                ],
                "roles": []
            },
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Updates user.",
                "operationId": "Users_UpdateAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "User identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "patch",
                        "in": "body",
                        "description": "Properties to update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserUpdateModel"
                        },
                        "type": "object"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[UserModel]"
                        }
                    },
                    "400": {
                        "description": "Invalid update model."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "404": {
                        "description": "User not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "users:update"
                ],
                "roles": []
            }
        },
        "/v1/users/{id}/autologin": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user autologin url.",
                "operationId": "Users_GetUserAutoLoginUrlAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "User identifier.",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[UrlModel]"
                        }
                    },
                    "400": {
                        "description": "User not configured for autologin."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "403": {
                        "description": "User doesn't have permission to perform action or access resource."
                    },
                    "404": {
                        "description": "User not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "users:read"
                ],
                "roles": []
            }
        },
        "/v1/users/validate": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Validates user by name.",
                "operationId": "Users_ValidateUsernameAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "username",
                    "in": "query",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataResult[ValidationResult]"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [
                    "users:read"
                ],
                "roles": []
            }
        },
        "/v1/users/{id}/cache": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Synchronizes user.",
                "operationId": "Users_SynchronizeUserAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "User identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User to synchronize.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserSaveModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Invalid identifier."
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "System,SuperUser"
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Removes desynchronized user.",
                "operationId": "Users_RemoveDesynchronizedUserAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "User identifier.",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Authorization has been denied for this request."
                    },
                    "404": {
                        "description": "User not found."
                    },
                    "500": {
                        "description": "Something went wrong on Good e-Learning's end.  (These are rare.)"
                    }
                },
                "scopes": [],
                "roles": [
                    "System,SuperUser"
                ]
            }
        }
    },
    "definitions": {
        "QueryFilter": {
            "description": "Represents pagination default pagination filter.",
            "type": "object",
            "properties": {
                "offset": {
                    "format": "int32",
                    "description": "Page offset.",
                    "type": "integer"
                },
                "limit": {
                    "format": "int32",
                    "description": "Page limit.",
                    "type": "integer"
                },
                "orderby": {
                    "description": "Ordering rule specified in the following format: '[order][propertyName]' or '[order][nestedObjectName].[propertyname]'. For ascending order use '+' and descending order use '-'.",
                    "type": "string"
                }
            }
        },
        "PagedCollectionResult[AccountBranchModel]": {
            "description": "Represents generic page collection.",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountBranchModel"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/PagingData",
                    "description": "Pagination"
                }
            }
        },
        "AccountBranchModel": {
            "description": "Represents simplified branch",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "Branch identifier",
                    "type": "integer"
                },
                "title": {
                    "description": "Branch title",
                    "type": "string"
                },
                "code": {
                    "description": "Branch code",
                    "type": "string"
                },
                "includeDescendants": {
                    "description": "Show are the descendants included",
                    "type": "boolean"
                }
            }
        },
        "PagingData": {
            "description": "Defines pagination properties.",
            "type": "object",
            "properties": {
                "returned": {
                    "format": "int32",
                    "description": "Returned elements count",
                    "type": "integer"
                },
                "total": {
                    "format": "int32",
                    "description": "Total elements count",
                    "type": "integer"
                },
                "limit": {
                    "format": "int32",
                    "description": "Page limit",
                    "type": "integer"
                },
                "offset": {
                    "format": "int32",
                    "description": "Offset",
                    "type": "integer"
                }
            }
        },
        "BranchAssignationModel": {
            "description": "Represent common branch assignation model.",
            "type": "object",
            "properties": {
                "branchId": {
                    "format": "int32",
                    "description": "Branch identifier",
                    "type": "integer"
                },
                "includeDescendants": {
                    "description": "Show are the descendants included",
                    "type": "boolean"
                }
            }
        },
        "DataResult[BranchAssignationResult]": {
            "description": "Represents generic data result.",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/BranchAssignationResult",
                    "description": "Data."
                }
            }
        },
        "BranchAssignationResult": {
            "description": "Represents branches assignation result.",
            "type": "object",
            "properties": {
                "assignedBranchIds": {
                    "description": "Gets or sets identifiers collection.",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "alreadyAssignedBranchIds": {
                    "description": "Gets or sets already assigned identifiers collection.",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "BranchIdentifiersModel": {
            "description": "Represents branches identifier",
            "type": "object",
            "properties": {
                "branchIds": {
                    "description": "Gets or sets identifier",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "PagedCollectionResult[SimplifiedCourseModel]": {
            "description": "Represents generic page collection.",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SimplifiedCourseModel"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/PagingData",
                    "description": "Pagination"
                }
            }
        },
        "SimplifiedCourseModel": {
            "description": "Represents course model.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "Course identifier.",
                    "type": "integer"
                },
                "name": {
                    "description": "Course name.",
                    "type": "string"
                },
                "code": {
                    "description": "Course code.",
                    "type": "string"
                }
            }
        },
        "CourseIdentifiersModel": {
            "description": "Represents course identifiers collection.",
            "type": "object",
            "properties": {
                "courseIds": {
                    "description": "Gets or sets course identifiers collection.",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "DataResult[CourseAssignationResult]": {
            "description": "Represents generic data result.",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/CourseAssignationResult",
                    "description": "Data."
                }
            }
        },
        "CourseAssignationResult": {
            "description": "Represents courses assignation result.",
            "type": "object",
            "properties": {
                "assignedCourseIds": {
                    "description": "Gets or sets identifiers collection.",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "alreadyAssignedCourseIds": {
                    "description": "Gets or sets already assigned identifiers collection.",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "PagedCollectionResult[SimplifiedLearningPlan]": {
            "description": "Represents generic page collection.",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SimplifiedLearningPlan"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/PagingData",
                    "description": "Pagination"
                }
            }
        },
        "SimplifiedLearningPlan": {
            "description": "Represents user's learning plan model",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "Learning plan identifier",
                    "type": "integer"
                },
                "code": {
                    "description": "Learning plan code",
                    "type": "string"
                },
                "name": {
                    "description": "Learning plan name",
                    "type": "string"
                }
            }
        },
        "LearningPlansIdentifierModel": {
            "description": "Represents learning plans identifier",
            "type": "object",
            "properties": {
                "learningPlanIds": {
                    "description": "Gets or sets identifier",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "DataResult[LearningPlanAssignationModel]": {
            "description": "Represents generic data result.",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/LearningPlanAssignationModel",
                    "description": "Data."
                }
            }
        },
        "LearningPlanAssignationModel": {
            "description": "Represents learning plan assignation result.",
            "type": "object",
            "properties": {
                "assignedLearningPlanIds": {
                    "description": "Gets or sets identifiers collection.",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "alreadyAssignedLearningPlanIds": {
                    "description": "Gets or sets already assigned identifiers collection.",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "PagedCollectionResult[RoleModel]": {
            "description": "Represents generic page collection.",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RoleModel"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/PagingData",
                    "description": "Pagination"
                }
            }
        },
        "RoleModel": {
            "description": "Represents user's role.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "Gets or sets role identifier.",
                    "type": "integer"
                },
                "name": {
                    "description": "Gets or sets role name.",
                    "type": "string"
                }
            }
        },
        "RoleIdentifiersModel": {
            "description": "Represents role identifiers collection.",
            "type": "object",
            "properties": {
                "roleIds": {
                    "description": "Gets or sets role identifiers collection.",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "DataResult[RoleAssignationModel]": {
            "description": "Represents generic data result.",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/RoleAssignationModel",
                    "description": "Data."
                }
            }
        },
        "RoleAssignationModel": {
            "description": "Represents roles assignation result.",
            "type": "object",
            "properties": {
                "assignedRoleIds": {
                    "description": "Gets or sets identifiers collection.",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "alreadyAssignedRoleIds": {
                    "description": "Gets or sets already assigned identifiers collection.",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "PagedCollectionResult[ScopeModel]": {
            "description": "Represents generic page collection.",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScopeModel"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/PagingData",
                    "description": "Pagination"
                }
            }
        },
        "ScopeModel": {
            "description": "Represents user's scope.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "Gets or sets scope identifier.",
                    "type": "integer"
                },
                "name": {
                    "description": "Gets or sets scope name.",
                    "type": "string"
                }
            }
        },
        "ScopeIdentifiersModel": {
            "description": "Represents scope identifiers collection.",
            "type": "object",
            "properties": {
                "scopeIds": {
                    "description": "Gets or sets scope identifiers collection.",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "DataResult[ScopeAssignationModel]": {
            "description": "Represents generic data result.",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/ScopeAssignationModel",
                    "description": "Data."
                }
            }
        },
        "ScopeAssignationModel": {
            "description": "Represents scopes assignation result.",
            "type": "object",
            "properties": {
                "assignedScopeIds": {
                    "description": "Gets or sets identifiers collection.",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "alreadyAssignedScopeIds": {
                    "description": "Gets or sets already assigned identifiers collection.",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "PagedCollectionResult[AccountModel]": {
            "description": "Represents generic page collection.",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountModel"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/PagingData",
                    "description": "Pagination"
                }
            }
        },
        "AccountModel": {
            "description": "Represents user's account.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "Gets or sets user's identifier.",
                    "type": "integer"
                },
                "username": {
                    "description": "Gets or sets username.",
                    "type": "string"
                },
                "email": {
                    "description": "Gets or sets email address.",
                    "type": "string"
                },
                "isActive": {
                    "description": "Active flag",
                    "type": "boolean"
                }
            }
        },
        "CreateAccountModel": {
            "description": "Represents create account model.",
            "type": "object",
            "properties": {
                "username": {
                    "description": "Gets or sets username.",
                    "type": "string"
                },
                "email": {
                    "description": "Gets or sets email address.",
                    "type": "string"
                },
                "password": {
                    "description": "Gets or sets password.",
                    "type": "string"
                },
                "isActive": {
                    "description": "Active flag",
                    "type": "boolean"
                }
            }
        },
        "DataResult[AccountModel]": {
            "description": "Represents generic data result.",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/AccountModel",
                    "description": "Data."
                }
            }
        },
        "UpdatePasswordModel": {
            "description": "Represents update account password model.",
            "type": "object",
            "properties": {
                "currentPassword": {
                    "description": "Gets or sets account current password.",
                    "type": "string"
                },
                "newPassword": {
                    "description": "Gets or sets account new password.",
                    "type": "string"
                }
            }
        },
        "BranchFilter": {
            "description": "Represents Branch filter model",
            "type": "object",
            "properties": {
                "branchId": {
                    "format": "int32",
                    "description": "Branch identifier.",
                    "type": "integer"
                },
                "branchCode": {
                    "description": "Branch code",
                    "type": "string"
                }
            }
        },
        "PagedCollectionResult[UserModel]": {
            "description": "Represents generic page collection.",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserModel"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/PagingData",
                    "description": "Pagination"
                }
            }
        },
        "UserModel": {
            "description": "Represents user.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "User identifier",
                    "type": "integer"
                },
                "email": {
                    "description": "Email address",
                    "type": "string"
                },
                "firstName": {
                    "description": "First name",
                    "type": "string"
                },
                "lastName": {
                    "description": "Last name",
                    "type": "string"
                },
                "username": {
                    "description": "Username",
                    "type": "string"
                },
                "avatarUri": {
                    "description": "Avatar url",
                    "type": "string"
                },
                "language": {
                    "description": "User UI language",
                    "enum": [
                        "arabic",
                        "bosnian",
                        "bulgarian",
                        "croatian",
                        "czech",
                        "danish",
                        "dutch",
                        "english",
                        "english_uk",
                        "farsi",
                        "finnish",
                        "french",
                        "german",
                        "greek",
                        "hebrew",
                        "hungarian",
                        "indonesian",
                        "italian",
                        "japanese",
                        "kazakh",
                        "korean",
                        "lithuanian",
                        "norwegian",
                        "polish",
                        "portuguese",
                        "portuguese-br",
                        "romanian",
                        "russian",
                        "simplified_chinese",
                        "slovenian",
                        "spanish",
                        "spanish_latam",
                        "swedish",
                        "thai",
                        "turkish",
                        "ukrainian",
                        "french-canadian",
                        "slovak",
                        "user",
                        "persian"
                    ],
                    "type": "string"
                },
                "status": {
                    "description": "User status",
                    "enum": [
                        "pending",
                        "suspended",
                        "unsuspended"
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "User type",
                    "enum": [
                        "user",
                        "student",
                        "godadmin",
                        "admin",
                        "erpadmin"
                    ],
                    "type": "string"
                },
                "isConfirmed": {
                    "description": "Determines if user is confirmed",
                    "type": "boolean"
                },
                "isEmailConfirmed": {
                    "description": "Determines if email address is confirmed",
                    "type": "boolean"
                },
                "createdDate": {
                    "format": "date-time",
                    "description": "Сreation date",
                    "type": "string"
                },
                "lastAccessDate": {
                    "format": "date-time",
                    "description": "Last access date",
                    "type": "string"
                },
                "expirationDate": {
                    "format": "date-time",
                    "description": "Expiration date",
                    "type": "string"
                },
                "requestDate": {
                    "format": "date-time",
                    "description": "Request date",
                    "type": "string"
                }
            }
        },
        "UserIdentifiersModel": {
            "description": "Represents users identifiers collection.",
            "type": "object",
            "properties": {
                "userIds": {
                    "description": "Gets or sets identifiers collection.",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "DataResult[UserAssignationModel]": {
            "description": "Represents generic data result.",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/UserAssignationModel",
                    "description": "Data."
                }
            }
        },
        "UserAssignationModel": {
            "description": "Represents user assignation result.",
            "type": "object",
            "properties": {
                "assignedUserIds": {
                    "description": "Gets or sets identifiers collection.",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "alreadyAssignedUserIds": {
                    "description": "Gets or sets already assigned identifiers collection.",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "DataResult[SynchronizationModel]": {
            "description": "Represents generic data result.",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/SynchronizationModel",
                    "description": "Data."
                }
            }
        },
        "SynchronizationModel": {
            "description": "Represents synchronization result.",
            "type": "object",
            "properties": {
                "assignedIds": {
                    "description": "Gets or sets identifiers collection.",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "alreadyAssignedIds": {
                    "description": "Gets or sets already assigned identifiers collection.",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "nonExistingIds": {
                    "description": "Gets or sets non existing identifiers collection.",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "PagedCollectionResult[BranchModel]": {
            "description": "Represents generic page collection.",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BranchModel"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/PagingData",
                    "description": "Pagination"
                }
            }
        },
        "BranchModel": {
            "description": "Represents branch.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "Branch identifier",
                    "type": "integer"
                },
                "title": {
                    "description": "Branch title",
                    "type": "string"
                },
                "code": {
                    "description": "Branch code",
                    "type": "string"
                },
                "parentId": {
                    "format": "int32",
                    "description": "Parent identifier",
                    "type": "integer"
                }
            }
        },
        "CreateBranchModel": {
            "description": "Create branch model",
            "type": "object",
            "properties": {
                "code": {
                    "description": "Branch code",
                    "type": "string"
                },
                "translations": {
                    "description": "Translations",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "parentId": {
                    "format": "int32",
                    "description": "Parent identifier",
                    "type": "integer"
                }
            }
        },
        "DataResult[BranchModel]": {
            "description": "Represents generic data result.",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/BranchModel",
                    "description": "Data."
                }
            }
        },
        "SaveBranchModel": {
            "description": "Save branch model",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "Branch identifier",
                    "type": "integer"
                },
                "code": {
                    "description": "Branch code",
                    "type": "string"
                },
                "title": {
                    "description": "Branch title",
                    "type": "string"
                },
                "translations": {
                    "description": "Translations",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "parentId": {
                    "format": "int32",
                    "description": "Parent identifier",
                    "type": "integer"
                }
            }
        },
        "DataResult[BranchSummaryModel]": {
            "description": "Represents generic data result.",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/BranchSummaryModel",
                    "description": "Data."
                }
            }
        },
        "BranchSummaryModel": {
            "description": "Branch Summary Model",
            "type": "object",
            "properties": {
                "numberOfUsers": {
                    "format": "int32",
                    "description": "Number of Branch Users",
                    "type": "integer"
                },
                "numberOfLearningPlans": {
                    "format": "int32",
                    "description": "Number of Branch Learning Plans",
                    "type": "integer"
                },
                "completedPercentage": {
                    "format": "double",
                    "description": "Completed Percentage",
                    "type": "number"
                },
                "inProgressPercentage": {
                    "format": "double",
                    "description": "In Progress Percentage",
                    "type": "number"
                },
                "notStartedPercentage": {
                    "format": "double",
                    "description": "Not Started Percentage",
                    "type": "number"
                },
                "numberOfLoggedInUsers": {
                    "format": "int32",
                    "description": "Number of Branch Logged In Users",
                    "type": "integer"
                },
                "numberOfActiveUsers": {
                    "format": "int32",
                    "description": "Number of Branch Active Users",
                    "type": "integer"
                }
            }
        },
        "PagedCollectionResult[CourseEnrollmentModel]": {
            "description": "Represents generic page collection.",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CourseEnrollmentModel"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/PagingData",
                    "description": "Pagination"
                }
            }
        },
        "CourseEnrollmentModel": {
            "description": "Course Enrollment",
            "type": "object",
            "properties": {
                "userId": {
                    "format": "int32",
                    "description": "Course Enrollment User identifier",
                    "type": "integer"
                },
                "courseId": {
                    "format": "int32",
                    "description": "Course Enrollment Course Identifier",
                    "type": "integer"
                },
                "status": {
                    "description": "Course Enrollment Status",
                    "enum": [
                        "enrolled",
                        "inProgress",
                        "completed",
                        "subscriptionToConfirm",
                        "waiting",
                        "suspended",
                        "overbooking"
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "Course Enrollment Type",
                    "enum": [
                        "elearning",
                        "webinar",
                        "classroom",
                        "learningPlan"
                    ],
                    "type": "string"
                },
                "startDate": {
                    "format": "date-time",
                    "description": "Course Enrollment Start Date",
                    "type": "string"
                },
                "endDate": {
                    "format": "date-time",
                    "description": "Course Enrollment End Date",
                    "type": "string"
                },
                "completeDate": {
                    "format": "date-time",
                    "description": "Course Enrollment Complete Date",
                    "type": "string"
                },
                "totalTime": {
                    "format": "int64",
                    "description": "Course Enrollment Total Study Time in Seconds",
                    "type": "integer"
                },
                "score": {
                    "format": "double",
                    "description": "Course Enrollment Score",
                    "type": "number"
                },
                "url": {
                    "description": "Course Enrollment URL",
                    "type": "string"
                }
            }
        },
        "EnrollmentModel": {
            "description": "Enrollment",
            "type": "object",
            "properties": {
                "userId": {
                    "format": "int32",
                    "description": "Enrollment User Identifier",
                    "type": "integer"
                },
                "resourceId": {
                    "format": "int32",
                    "description": "Enrollment Resourse Identifier",
                    "type": "integer"
                },
                "status": {
                    "description": "Enrollment Status",
                    "enum": [
                        "enrolled",
                        "inProgress",
                        "completed",
                        "subscriptionToConfirm",
                        "waiting",
                        "suspended",
                        "overbooking"
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "Enrollment Type",
                    "enum": [
                        "elearning",
                        "webinar",
                        "classroom",
                        "learningPlan"
                    ],
                    "type": "string"
                },
                "startDate": {
                    "format": "date-time",
                    "description": "Enrollment Start Date",
                    "type": "string"
                },
                "endDate": {
                    "format": "date-time",
                    "description": "Enrollment End Date",
                    "type": "string"
                },
                "completeDate": {
                    "format": "date-time",
                    "description": "Enrollment Complete Date",
                    "type": "string"
                },
                "totalTime": {
                    "format": "int64",
                    "description": "Enrollment Total Study Time in Seconds",
                    "type": "integer"
                },
                "score": {
                    "format": "double",
                    "description": "Enrollment Score",
                    "type": "number"
                },
                "url": {
                    "description": "Enrollment URL",
                    "type": "string"
                }
            }
        },
        "LearningPlanFilter": {
            "description": "Represents learning plan filter.",
            "type": "object",
            "properties": {
                "learningPlanId": {
                    "format": "int32",
                    "description": "Learning plan identifier",
                    "type": "integer"
                },
                "learningPlanCode": {
                    "description": "Learning plan code",
                    "type": "string"
                }
            }
        },
        "PagedCollectionResult[BranchCourseSummaryModel]": {
            "description": "Represents generic page collection.",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BranchCourseSummaryModel"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/PagingData",
                    "description": "Pagination"
                }
            }
        },
        "BranchCourseSummaryModel": {
            "description": "Branch Course Summary Model",
            "type": "object",
            "properties": {
                "numberOfUsers": {
                    "format": "int32",
                    "description": "Number of users in the specified branch enrolled to the course",
                    "type": "integer"
                },
                "completedPercentage": {
                    "format": "double",
                    "description": "Completed Percentage",
                    "type": "number"
                },
                "inProgressPercentage": {
                    "format": "double",
                    "description": "In Progress Percentage",
                    "type": "number"
                },
                "notStartedPercentage": {
                    "format": "double",
                    "description": "Not Started Percentage",
                    "type": "number"
                },
                "course": {
                    "$ref": "#/definitions/CourseModel",
                    "description": "Course"
                }
            }
        },
        "CourseModel": {
            "description": "Course",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "Course Identifier",
                    "type": "integer"
                },
                "name": {
                    "description": "Course Name",
                    "type": "string"
                },
                "code": {
                    "description": "Course Code",
                    "type": "string"
                },
                "description": {
                    "description": "Course Description",
                    "type": "string"
                },
                "thumbnail": {
                    "description": "Course Image URL",
                    "type": "string"
                },
                "language": {
                    "description": "Course Language",
                    "enum": [
                        "arabic",
                        "bosnian",
                        "bulgarian",
                        "croatian",
                        "czech",
                        "danish",
                        "dutch",
                        "english",
                        "english_uk",
                        "farsi",
                        "finnish",
                        "french",
                        "german",
                        "greek",
                        "hebrew",
                        "hungarian",
                        "indonesian",
                        "italian",
                        "japanese",
                        "kazakh",
                        "korean",
                        "lithuanian",
                        "norwegian",
                        "polish",
                        "portuguese",
                        "portuguese-br",
                        "romanian",
                        "russian",
                        "simplified_chinese",
                        "slovenian",
                        "spanish",
                        "spanish_latam",
                        "swedish",
                        "thai",
                        "turkish",
                        "ukrainian",
                        "french-canadian",
                        "slovak",
                        "user",
                        "persian"
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "Course Type",
                    "enum": [
                        "elearning",
                        "webinar",
                        "classroom"
                    ],
                    "type": "string"
                }
            }
        },
        "IdentifierFilter": {
            "description": "Represents query filter.",
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code.",
                    "type": "string"
                }
            }
        },
        "PagedCollectionResult[CourseModel]": {
            "description": "Represents generic page collection.",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CourseModel"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/PagingData",
                    "description": "Pagination"
                }
            }
        },
        "DataResult[CourseModel]": {
            "description": "Represents generic data result.",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/CourseModel",
                    "description": "Data."
                }
            }
        },
        "CourseSaveModel": {
            "description": "Course Save",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "Gets or sets Course Identifier",
                    "type": "integer"
                },
                "name": {
                    "description": "Gets or sets Course Name",
                    "type": "string"
                },
                "code": {
                    "description": "Gets or sets Course Code",
                    "type": "string"
                },
                "description": {
                    "description": "Gets or sets Course Description",
                    "type": "string"
                },
                "thumbnail": {
                    "description": "Gets or sets Course Image URL",
                    "type": "string"
                },
                "language": {
                    "description": "Gets or sets Course Language",
                    "enum": [
                        "arabic",
                        "bosnian",
                        "bulgarian",
                        "croatian",
                        "czech",
                        "danish",
                        "dutch",
                        "english",
                        "english_uk",
                        "farsi",
                        "finnish",
                        "french",
                        "german",
                        "greek",
                        "hebrew",
                        "hungarian",
                        "indonesian",
                        "italian",
                        "japanese",
                        "kazakh",
                        "korean",
                        "lithuanian",
                        "norwegian",
                        "polish",
                        "portuguese",
                        "portuguese-br",
                        "romanian",
                        "russian",
                        "simplified_chinese",
                        "slovenian",
                        "spanish",
                        "spanish_latam",
                        "swedish",
                        "thai",
                        "turkish",
                        "ukrainian",
                        "french-canadian",
                        "slovak",
                        "user",
                        "persian"
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "Gets or sets Course Type",
                    "enum": [
                        "elearning",
                        "webinar",
                        "classroom"
                    ],
                    "type": "string"
                }
            }
        },
        "LeaderboardFilter": {
            "description": "Represents Leaderboard filter model",
            "type": "object",
            "properties": {
                "rankType": {
                    "description": "Position type strategy.",
                    "enum": [
                        "denseRank",
                        "competitionRank"
                    ],
                    "type": "string"
                },
                "userId": {
                    "format": "int32",
                    "description": "UserId.",
                    "type": "integer"
                }
            }
        },
        "PagedDataResult[LeaderboardModel]": {
            "description": "Represents generic paged data result.",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/LeaderboardModel",
                    "description": "Data."
                },
                "paging": {
                    "$ref": "#/definitions/PagingData",
                    "description": "Pagination"
                }
            }
        },
        "LeaderboardModel": {
            "description": "Represents leaderboard model",
            "type": "object",
            "properties": {
                "positions": {
                    "description": "Leaderboard positions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LeaderboardPositionModel"
                    }
                },
                "userPosition": {
                    "$ref": "#/definitions/LeaderboardPositionModel",
                    "description": "Specified user leaderboard position"
                }
            }
        },
        "LeaderboardPositionModel": {
            "description": "Represents leaderboard position model",
            "type": "object",
            "properties": {
                "points": {
                    "format": "int32",
                    "description": "Points",
                    "type": "integer"
                },
                "rank": {
                    "format": "int32",
                    "description": "Rank",
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/UserModel",
                    "description": "User"
                }
            }
        },
        "PagedCollectionResult[LeaderboardPositionModel]": {
            "description": "Represents generic page collection.",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LeaderboardPositionModel"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/PagingData",
                    "description": "Pagination"
                }
            }
        },
        "LeaderboardPositionSaveModel": {
            "description": "Represents leaderboard position save model",
            "type": "object",
            "properties": {
                "userId": {
                    "format": "int32",
                    "description": "User identifier",
                    "type": "integer"
                },
                "points": {
                    "format": "int32",
                    "description": "Points",
                    "type": "integer"
                }
            }
        },
        "PagedCollectionResult[LearningObjectProgressModel]": {
            "description": "Represents generic page collection.",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LearningObjectProgressModel"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/PagingData",
                    "description": "Pagination"
                }
            }
        },
        "LearningObjectProgressModel": {
            "description": "Represents learning object progress model.",
            "type": "object",
            "properties": {
                "userId": {
                    "format": "int32",
                    "description": "User identifier",
                    "type": "integer"
                },
                "learningObjectId": {
                    "description": "Learning object identifier",
                    "type": "string"
                },
                "score": {
                    "format": "double",
                    "description": "Score",
                    "type": "number"
                },
                "firstAttempt": {
                    "format": "date-time",
                    "description": "First attempt date",
                    "type": "string"
                },
                "lastAttempt": {
                    "format": "date-time",
                    "description": "Attempt date",
                    "type": "string"
                },
                "subscriptionDate": {
                    "format": "date-time",
                    "description": "Subscription date",
                    "type": "string"
                },
                "status": {
                    "description": "User's learning object progress status",
                    "enum": [
                        "notStarted",
                        "inProgress",
                        "completed",
                        "failed"
                    ],
                    "type": "string"
                }
            }
        },
        "PagedCollectionResult[LearningObjectModel]": {
            "description": "Represents generic page collection.",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LearningObjectModel"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/PagingData",
                    "description": "Pagination"
                }
            }
        },
        "LearningObjectModel": {
            "description": "Represents learning object model.",
            "type": "object",
            "properties": {
                "id": {
                    "description": "Learning object identifier",
                    "type": "string"
                },
                "parentId": {
                    "description": "Learning object parent identifier",
                    "type": "string"
                },
                "courseId": {
                    "format": "int32",
                    "description": "Course identifier",
                    "type": "integer"
                },
                "title": {
                    "description": "Title",
                    "type": "string"
                },
                "urlSlug": {
                    "description": "Url slug",
                    "type": "string"
                },
                "displayOrder": {
                    "format": "int32",
                    "description": "Learning object display order",
                    "type": "integer"
                },
                "isVisible": {
                    "description": "Visibility flag",
                    "type": "boolean"
                },
                "isFolder": {
                    "description": "Folder flag",
                    "type": "boolean"
                },
                "type": {
                    "description": "Learning object type",
                    "enum": [
                        "Scormorg",
                        "Item",
                        "Video",
                        "Tincan",
                        "File",
                        "HtmlPage",
                        "Test",
                        "Poll",
                        "Authoring",
                        "Deliverable",
                        "AICC",
                        "Elucidat",
                        "Centralrepo",
                        "Lectora",
                        "Vimeo",
                        "Youtube",
                        "Wistia",
                        "LTI"
                    ],
                    "type": "string"
                }
            }
        },
        "DataResult[IEnumerable[DetailedLearningObjectModel]]": {
            "description": "Represents generic data result.",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DetailedLearningObjectModel"
                    }
                }
            }
        },
        "DetailedLearningObjectModel": {
            "description": "Represents detailed learning object model.",
            "type": "object",
            "properties": {
                "id": {
                    "description": "Learning object identifier",
                    "type": "string"
                },
                "parentId": {
                    "description": "Learning object parent identifier",
                    "type": "string"
                },
                "courseId": {
                    "format": "int32",
                    "description": "Course identifier",
                    "type": "integer"
                },
                "title": {
                    "description": "Title",
                    "type": "string"
                },
                "urlSlug": {
                    "description": "Url slug",
                    "type": "string"
                },
                "displayOrder": {
                    "format": "int32",
                    "description": "Learning object display order",
                    "type": "integer"
                },
                "isVisible": {
                    "description": "Visibility flag",
                    "type": "boolean"
                },
                "isFolder": {
                    "description": "Folder flag",
                    "type": "boolean"
                },
                "type": {
                    "description": "Learning object type",
                    "enum": [
                        "Scormorg",
                        "Item",
                        "Video",
                        "Tincan",
                        "File",
                        "HtmlPage",
                        "Test",
                        "Poll",
                        "Authoring",
                        "Deliverable",
                        "AICC",
                        "Elucidat",
                        "Centralrepo",
                        "Lectora",
                        "Vimeo",
                        "Youtube",
                        "Wistia",
                        "LTI"
                    ],
                    "type": "string"
                },
                "children": {
                    "description": "Learning object children",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DetailedLearningObjectModel"
                    }
                }
            }
        },
        "DataResult[DetailedLearningObjectModel]": {
            "description": "Represents generic data result.",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/DetailedLearningObjectModel",
                    "description": "Data."
                }
            }
        },
        "IdentifiersModel[Int32]": {
            "description": "Represents generic identifiers collection.",
            "type": "object",
            "properties": {
                "ids": {
                    "description": "Gets or sets identifiers collection.",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "PagedCollectionResult[LearningPlanEnrollmentModel]": {
            "description": "Represents generic page collection.",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LearningPlanEnrollmentModel"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/PagingData",
                    "description": "Pagination"
                }
            }
        },
        "LearningPlanEnrollmentModel": {
            "description": "Learning Plan Enrollment",
            "type": "object",
            "properties": {
                "userId": {
                    "format": "int32",
                    "description": "Learning Plan Enrollment User Identifier",
                    "type": "integer"
                },
                "learningPlanId": {
                    "format": "int32",
                    "description": "Learning Plan Enrollment Learning Plan Identifier",
                    "type": "integer"
                },
                "status": {
                    "description": "Learning Plan Enrollment Status",
                    "enum": [
                        "enrolled",
                        "inProgress",
                        "completed",
                        "subscriptionToConfirm",
                        "waiting",
                        "suspended",
                        "overbooking"
                    ],
                    "type": "string"
                },
                "startDate": {
                    "format": "date-time",
                    "description": "Learning Plan Enrollment Start Date",
                    "type": "string"
                },
                "endDate": {
                    "format": "date-time",
                    "description": "Learning Plan Enrollment End date",
                    "type": "string"
                },
                "completeDate": {
                    "format": "date-time",
                    "description": "Learning Plan Enrollment Complete date",
                    "type": "string"
                },
                "totalTime": {
                    "format": "int64",
                    "description": "Learning Plan Enrollment Total Study Time in Seconds",
                    "type": "integer"
                },
                "score": {
                    "format": "double",
                    "description": "Learning Plan Enrollment Score",
                    "type": "number"
                },
                "url": {
                    "description": "Learning Plan Enrollment URL",
                    "type": "string"
                }
            }
        },
        "UserIdentifierModel": {
            "description": "Represents user identifier",
            "type": "object",
            "properties": {
                "userId": {
                    "format": "int32",
                    "description": "Gets or sets identifier",
                    "type": "integer"
                }
            }
        },
        "DataResult[IEnumerable[UserLearningPlanSummaryModel]]": {
            "description": "Represents generic data result.",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserLearningPlanSummaryModel"
                    }
                }
            }
        },
        "UserLearningPlanSummaryModel": {
            "description": "User Learning Plan Summary",
            "type": "object",
            "properties": {
                "learningPlan": {
                    "$ref": "#/definitions/LearningPlanOverviewModel",
                    "description": "Learning Plan Overview"
                },
                "learningPlanEnrollment": {
                    "$ref": "#/definitions/LearningPlanEnrollmentOverviewModel",
                    "description": "Learning Plan Enrollment Summary"
                },
                "lastAttemptedLearningObject": {
                    "$ref": "#/definitions/LearningObjectOverviewModel",
                    "description": "Learning Object Summary"
                }
            }
        },
        "LearningPlanOverviewModel": {
            "description": "Learning Plan Overview",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "Learning Plan Identifier",
                    "type": "integer"
                },
                "name": {
                    "description": "Learning Plan Name",
                    "type": "string"
                },
                "description": {
                    "description": "Learning Plan Description",
                    "type": "string"
                },
                "thumbnail": {
                    "description": "Learning Plan Image URL",
                    "type": "string"
                }
            }
        },
        "LearningPlanEnrollmentOverviewModel": {
            "description": "Learning Plan Enrollment Overview",
            "type": "object",
            "properties": {
                "status": {
                    "description": "Learning Plan Enrollment Status",
                    "enum": [
                        "enrolled",
                        "inProgress",
                        "completed",
                        "subscriptionToConfirm",
                        "waiting",
                        "suspended",
                        "overbooking"
                    ],
                    "type": "string"
                },
                "startDate": {
                    "format": "date-time",
                    "description": "Learning Plan Enrollment Start Date",
                    "type": "string"
                },
                "completeDate": {
                    "format": "date-time",
                    "description": "Learning Plan Enrollment Completion Date",
                    "type": "string"
                },
                "completionPercentage": {
                    "format": "double",
                    "description": "Learning Plan Enrollment Completion Percentage",
                    "type": "number"
                },
                "remainingCompletionTime": {
                    "format": "int64",
                    "description": "Learning Plan Enrollment Remaining Completion Time in Seconds (Estimate)",
                    "type": "integer"
                },
                "onTrackSummary": {
                    "$ref": "#/definitions/OnTrackSummaryModel",
                    "description": "Learning Plan Period Details"
                }
            }
        },
        "LearningObjectOverviewModel": {
            "description": "Last Attempted Learning Object",
            "type": "object",
            "properties": {
                "date": {
                    "format": "date-time",
                    "description": "Date of Last Attempt",
                    "type": "string"
                },
                "id": {
                    "description": "Learning Object Identifier",
                    "type": "string"
                },
                "name": {
                    "description": "Learning Object Name",
                    "type": "string"
                },
                "course": {
                    "$ref": "#/definitions/CourseOverviewModel",
                    "description": "Last Attempted Course"
                }
            }
        },
        "OnTrackSummaryModel": {
            "description": "On Track/Off Track Period Details",
            "type": "object",
            "properties": {
                "startDate": {
                    "format": "date-time",
                    "description": "Period Start Date",
                    "type": "string"
                },
                "endDate": {
                    "format": "date-time",
                    "description": "Period End Date",
                    "type": "string"
                },
                "isActive": {
                    "description": "Is Current Period Active",
                    "type": "boolean"
                },
                "totalLearningObjectsToComplete": {
                    "format": "int32",
                    "description": "Total Number of Learning Objects",
                    "type": "integer"
                },
                "targetCompletedLearningObjects": {
                    "format": "int32",
                    "description": "Target Number of Completed Objects for Keep On Track Till Today",
                    "type": "integer"
                },
                "actualCompletedLearningObjects": {
                    "format": "int32",
                    "description": "Actual Number of Completed Objects Till Today",
                    "type": "integer"
                },
                "isOnTrack": {
                    "description": "Is On Track/Off Track",
                    "type": "boolean"
                }
            }
        },
        "CourseOverviewModel": {
            "description": "Course Overview",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "Course Identifier",
                    "type": "integer"
                },
                "name": {
                    "description": "Course Name",
                    "type": "string"
                },
                "description": {
                    "description": "Course Description",
                    "type": "string"
                },
                "thumbnail": {
                    "description": "Course Image URL",
                    "type": "string"
                },
                "type": {
                    "description": "Course Type",
                    "enum": [
                        "elearning",
                        "webinar",
                        "classroom"
                    ],
                    "type": "string"
                },
                "language": {
                    "description": "Course Language",
                    "enum": [
                        "arabic",
                        "bosnian",
                        "bulgarian",
                        "croatian",
                        "czech",
                        "danish",
                        "dutch",
                        "english",
                        "english_uk",
                        "farsi",
                        "finnish",
                        "french",
                        "german",
                        "greek",
                        "hebrew",
                        "hungarian",
                        "indonesian",
                        "italian",
                        "japanese",
                        "kazakh",
                        "korean",
                        "lithuanian",
                        "norwegian",
                        "polish",
                        "portuguese",
                        "portuguese-br",
                        "romanian",
                        "russian",
                        "simplified_chinese",
                        "slovenian",
                        "spanish",
                        "spanish_latam",
                        "swedish",
                        "thai",
                        "turkish",
                        "ukrainian",
                        "french-canadian",
                        "slovak",
                        "user",
                        "persian"
                    ],
                    "type": "string"
                }
            }
        },
        "DataResult[IEnumerable[UserLearningPlanDetailSummaryModel]]": {
            "description": "Represents generic data result.",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserLearningPlanDetailSummaryModel"
                    }
                }
            }
        },
        "UserLearningPlanDetailSummaryModel": {
            "description": "User Learning Plan Detail Summary",
            "type": "object",
            "properties": {
                "learningPlan": {
                    "$ref": "#/definitions/LearningPlanOverviewModel",
                    "description": "Learning Plan"
                },
                "learningPlanEnrollment": {
                    "$ref": "#/definitions/LearningPlanEnrollmentOverviewModel",
                    "description": "Learning Plan Enrollment"
                },
                "courses": {
                    "description": "Learning Plan Courses",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CourseDetailOverviewModel"
                    }
                }
            }
        },
        "CourseDetailOverviewModel": {
            "description": "Course Detail Overview",
            "type": "object",
            "properties": {
                "course": {
                    "$ref": "#/definitions/CourseOverviewModel",
                    "description": "Course"
                },
                "courseEnrollment": {
                    "$ref": "#/definitions/CourseEnrollmentDetailModel",
                    "description": "Course Enrollment"
                },
                "learningObjects": {
                    "description": "Course Learning Objects",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LearningObjectDetailModel"
                    }
                }
            }
        },
        "CourseEnrollmentDetailModel": {
            "description": "Course Enrollment Detail",
            "type": "object",
            "properties": {
                "status": {
                    "description": "Course Enrollment Status",
                    "enum": [
                        "enrolled",
                        "inProgress",
                        "completed",
                        "subscriptionToConfirm",
                        "waiting",
                        "suspended",
                        "overbooking"
                    ],
                    "type": "string"
                },
                "startDate": {
                    "format": "date-time",
                    "description": "Course Enrollment Start Date",
                    "type": "string"
                },
                "endDate": {
                    "format": "date-time",
                    "description": "Course Enrollment End Date",
                    "type": "string"
                },
                "completeDate": {
                    "format": "date-time",
                    "description": "Course Enrollment Complete Date",
                    "type": "string"
                },
                "totalTime": {
                    "format": "int64",
                    "description": "Course Enrollment Total Study Time in Seconds",
                    "type": "integer"
                },
                "completionPercentage": {
                    "format": "double",
                    "description": "Course Enrollment Completion Percentage",
                    "type": "number"
                },
                "remainingCompletionTime": {
                    "format": "int64",
                    "description": "Course Enrollment Remaining Completion Time in Seconds (Estimate)",
                    "type": "integer"
                },
                "onTrackSummary": {
                    "$ref": "#/definitions/OnTrackSummaryModel",
                    "description": "Course Period Details"
                }
            }
        },
        "LearningObjectDetailModel": {
            "description": "Learning Object Details",
            "type": "object",
            "properties": {
                "learningObject": {
                    "$ref": "#/definitions/LearningObjectDetailItemModel",
                    "description": "Learning Object"
                },
                "learningObjectEnrollment": {
                    "$ref": "#/definitions/LearningObjectEnrollmentModel",
                    "description": "Learning Object Enrollment"
                }
            }
        },
        "LearningObjectDetailItemModel": {
            "description": "Learning Object Detail Item",
            "type": "object",
            "properties": {
                "id": {
                    "description": "Learning Object Identifier",
                    "type": "string"
                },
                "parentId": {
                    "format": "int32",
                    "description": "Learning Object Parent Identifier",
                    "type": "integer"
                },
                "type": {
                    "description": "Learning Object Type",
                    "enum": [
                        "Scormorg",
                        "Item",
                        "Video",
                        "Tincan",
                        "File",
                        "HtmlPage",
                        "Test",
                        "Poll",
                        "Authoring",
                        "Deliverable",
                        "AICC",
                        "Elucidat",
                        "Centralrepo",
                        "Lectora",
                        "Vimeo",
                        "Youtube",
                        "Wistia",
                        "LTI"
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "Learning Object Name",
                    "type": "string"
                },
                "isFolder": {
                    "description": "Learning Object Is Folder",
                    "type": "boolean"
                },
                "displayOrder": {
                    "format": "int32",
                    "description": "Learning Object Display Order",
                    "type": "integer"
                }
            }
        },
        "LearningObjectEnrollmentModel": {
            "description": "Learning Object Enrollment",
            "type": "object",
            "properties": {
                "status": {
                    "description": "Learning Object Enrollment Status",
                    "enum": [
                        "notStarted",
                        "inProgress",
                        "completed",
                        "failed"
                    ],
                    "type": "string"
                },
                "firstAttemptDate": {
                    "format": "date-time",
                    "description": "Learning Object Enrollment First Attempt Date",
                    "type": "string"
                },
                "lastAttemptDate": {
                    "format": "date-time",
                    "description": "Learning Object Enrollment Last Attempt Date",
                    "type": "string"
                },
                "score": {
                    "format": "double",
                    "description": "Learning Object Enrollment Score",
                    "type": "number"
                }
            }
        },
        "DataResult[BranchLearningPlanDetailSummaryModel]": {
            "description": "Represents generic data result.",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/BranchLearningPlanDetailSummaryModel",
                    "description": "Data."
                }
            }
        },
        "BranchLearningPlanDetailSummaryModel": {
            "description": "Branch Learning Plan Summary",
            "type": "object",
            "properties": {
                "numberOfUsers": {
                    "format": "int32",
                    "description": "Number of users",
                    "type": "integer"
                },
                "notStartedPercentage": {
                    "format": "double",
                    "description": "Not Started Percentage",
                    "type": "number"
                },
                "inProgressPercentage": {
                    "format": "double",
                    "description": "In Progress Percentage",
                    "type": "number"
                },
                "completedPercentage": {
                    "format": "double",
                    "description": "Completed Percentage",
                    "type": "number"
                },
                "learningPlan": {
                    "$ref": "#/definitions/LearningPlanModel",
                    "description": "Learning Plan"
                }
            }
        },
        "LearningPlanModel": {
            "description": "Learning Plan",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "Learning Plan Identifier",
                    "type": "integer"
                },
                "code": {
                    "description": "Learning Plan Code",
                    "type": "string"
                },
                "name": {
                    "description": "Learning Plan Name",
                    "type": "string"
                },
                "description": {
                    "description": "Learning Plan Description",
                    "type": "string"
                },
                "thumbnail": {
                    "description": "Learning Plan Image URL",
                    "type": "string"
                }
            }
        },
        "PagedCollectionResult[BranchLearningPlanDetailSummaryModel]": {
            "description": "Represents generic page collection.",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BranchLearningPlanDetailSummaryModel"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/PagingData",
                    "description": "Pagination"
                }
            }
        },
        "PagedCollectionResult[LearningPlanModel]": {
            "description": "Represents generic page collection.",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LearningPlanModel"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/PagingData",
                    "description": "Pagination"
                }
            }
        },
        "DataResult[LearningPlanModel]": {
            "description": "Represents generic data result.",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/LearningPlanModel",
                    "description": "Data."
                }
            }
        },
        "JobModel": {
            "description": "Represents job model.",
            "type": "object",
            "properties": {
                "id": {
                    "description": "Gets or sets job identifier.",
                    "type": "string"
                },
                "lastSynchronizationDate": {
                    "format": "date-time",
                    "description": "Gets or sets last synchronization date.",
                    "type": "string"
                }
            }
        },
        "PagedCollectionResult[PlatformStatisticsModel]": {
            "description": "Represents generic page collection.",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PlatformStatisticsModel"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/PagingData",
                    "description": "Pagination"
                }
            }
        },
        "PlatformStatisticsModel": {
            "description": "Represents platform statistics.",
            "type": "object",
            "properties": {
                "platformStatisticsId": {
                    "format": "int32",
                    "description": "Platform statistics identifier.",
                    "type": "integer"
                },
                "usersCount": {
                    "format": "int32",
                    "description": "Number of users.",
                    "type": "integer"
                },
                "weekSessionsCount": {
                    "format": "int32",
                    "description": "Number of sessions in last 7 days.",
                    "type": "integer"
                },
                "userSessionsCount": {
                    "format": "int32",
                    "description": "Number or use sessions.",
                    "type": "integer"
                },
                "weekLoginsCount": {
                    "format": "int32",
                    "description": "Number of logins in last 7 days.",
                    "type": "integer"
                },
                "hasCustomLogo": {
                    "format": "int32",
                    "description": "Determines whether platform has custom logo.",
                    "type": "integer"
                },
                "courseTotCount": {
                    "format": "int32",
                    "description": "Total number of courses.",
                    "type": "integer"
                },
                "preinstalledTotCount": {
                    "format": "int32",
                    "description": "Total number of pre-installed courses.",
                    "type": "integer"
                },
                "marketplaceCourseCount": {
                    "format": "int32",
                    "description": "Number of courses installed from marketplace.",
                    "type": "integer"
                },
                "userCourseCount": {
                    "format": "int32",
                    "description": "Number of courses created by LMS users.",
                    "type": "integer"
                },
                "learningObjectsCount": {
                    "format": "int32",
                    "description": "Number of learning objects.",
                    "type": "integer"
                },
                "preinstalledLearningObjectsCount": {
                    "format": "int32",
                    "description": "Number of preinstalled learning objects.",
                    "type": "integer"
                },
                "userLearningObjectsCount": {
                    "format": "int32",
                    "description": "Number of courses learning objects installed by user (not from marketplace).",
                    "type": "integer"
                },
                "courseSubscriptionCount": {
                    "format": "int32",
                    "description": "Total number of users subscribed to courses.",
                    "type": "integer"
                },
                "lastPlatformAction": {
                    "format": "date-time",
                    "description": "Last action in platform.",
                    "type": "string"
                },
                "trainingTime12Month": {
                    "format": "int64",
                    "description": "Training time in last 12 months.",
                    "type": "integer"
                },
                "lastPlatformLogin": {
                    "format": "date-time",
                    "description": "Last login in platform.",
                    "type": "string"
                },
                "syncDate": {
                    "format": "date-time",
                    "description": "Sync date.",
                    "type": "string"
                }
            }
        },
        "SavePlatformStatisticsModel": {
            "description": "Represents platform statistics for saving.",
            "type": "object",
            "properties": {
                "usersCount": {
                    "format": "int32",
                    "description": "Number of users.",
                    "type": "integer"
                },
                "weekSessionsCount": {
                    "format": "int32",
                    "description": "Number of sessions in last 7 days.",
                    "type": "integer"
                },
                "userSessionsCount": {
                    "format": "int32",
                    "description": "Number or use sessions.",
                    "type": "integer"
                },
                "weekLoginsCount": {
                    "format": "int32",
                    "description": "Number of logins in last 7 days.",
                    "type": "integer"
                },
                "hasCustomLogo": {
                    "format": "int32",
                    "description": "Determines whether platform has custom logo.",
                    "type": "integer"
                },
                "courseTotCount": {
                    "format": "int32",
                    "description": "Total number of courses.",
                    "type": "integer"
                },
                "preinstalledTotCount": {
                    "format": "int32",
                    "description": "Total number of pre-installed courses.",
                    "type": "integer"
                },
                "marketplaceCourseCount": {
                    "format": "int32",
                    "description": "Number of courses installed from marketplace.",
                    "type": "integer"
                },
                "userCourseCount": {
                    "format": "int32",
                    "description": "Number of courses created by LMS users.",
                    "type": "integer"
                },
                "learningObjectsCount": {
                    "format": "int32",
                    "description": "Number of learning objects.",
                    "type": "integer"
                },
                "preinstalledLearningObjectsCount": {
                    "format": "int32",
                    "description": "Number of preinstalled learning objects.",
                    "type": "integer"
                },
                "userLearningObjectsCount": {
                    "format": "int32",
                    "description": "Number of courses learning objects installed by user (not from marketplace).",
                    "type": "integer"
                },
                "courseSubscriptionCount": {
                    "format": "int32",
                    "description": "Total number of users subscribed to courses.",
                    "type": "integer"
                },
                "trainingTime12Month": {
                    "format": "int64",
                    "description": "Training time in last 12 months",
                    "type": "integer"
                },
                "lastPlatformAction": {
                    "format": "date-time",
                    "description": "Last action in platform.",
                    "type": "string"
                },
                "lastPlatformLogin": {
                    "format": "date-time",
                    "description": "Last login in platform.",
                    "type": "string"
                }
            }
        },
        "PowerUserCreateModel": {
            "description": "Represents power user create model",
            "type": "object",
            "properties": {
                "userId": {
                    "format": "int32",
                    "description": "User identifier",
                    "type": "integer"
                },
                "profileName": {
                    "description": "Power user profile name",
                    "type": "string"
                }
            }
        },
        "PowerUserUpdateModel": {
            "description": "Represents power user upate model",
            "type": "object",
            "properties": {
                "profileName": {
                    "description": "Power user profile name",
                    "type": "string"
                }
            }
        },
        "UploadOptions": {
            "description": "Represents create upload options.",
            "type": "object",
            "properties": {
                "filename": {
                    "description": "Gets or sets upload options file name.",
                    "type": "string"
                },
                "mimeType": {
                    "description": "Gets or sets upload options mime type.",
                    "type": "string"
                },
                "collection": {
                    "description": "Gets or sets upload options collection.",
                    "type": "string"
                }
            }
        },
        "UploadModel": {
            "description": "Represents upload.",
            "type": "object",
            "properties": {
                "uri": {
                    "description": "Gets or sets upload address.",
                    "type": "string"
                },
                "filename": {
                    "description": "Gets or sets original file name.",
                    "type": "string"
                },
                "filenameHashed": {
                    "description": "Gets or sets hashed file name.",
                    "type": "string"
                }
            }
        },
        "UploadedFileModel": {
            "description": "Represents the uploaded file.",
            "type": "object",
            "properties": {
                "uri": {
                    "description": "Gets or sets uploaded file address.",
                    "type": "string"
                },
                "fileName": {
                    "description": "Gets or sets uploaded file name;",
                    "type": "string"
                }
            }
        },
        "PlayUrlFilter": {
            "description": "Represents play url filter.",
            "type": "object",
            "properties": {
                "userId": {
                    "format": "int32",
                    "description": "User identifier",
                    "type": "integer"
                },
                "learningPlanId": {
                    "format": "int32",
                    "description": "Learning plan identifier",
                    "type": "integer"
                },
                "courseId": {
                    "format": "int32",
                    "description": "Course identifier",
                    "type": "integer"
                },
                "learningObjectId": {
                    "description": "Learning object identifier",
                    "type": "string"
                }
            }
        },
        "DataResult[UrlModel]": {
            "description": "Represents generic data result.",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/UrlModel",
                    "description": "Data."
                }
            }
        },
        "UrlModel": {
            "description": "Represents url model.",
            "type": "object",
            "properties": {
                "url": {
                    "description": "Gets or sets url.",
                    "type": "string"
                }
            }
        },
        "PagedCollectionResult[UserSummaryModel]": {
            "description": "Represents generic page collection.",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserSummaryModel"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/PagingData",
                    "description": "Pagination"
                }
            }
        },
        "UserSummaryModel": {
            "description": "User Summary",
            "type": "object",
            "properties": {
                "completionPercentage": {
                    "format": "double",
                    "description": "Enrollment Completion Percentage",
                    "type": "number"
                },
                "remainingCompletionTime": {
                    "format": "int64",
                    "description": "Enrollment Remaining Completion Time in Seconds (Estimate)",
                    "type": "integer"
                },
                "onTrackSummary": {
                    "$ref": "#/definitions/OnTrackSummaryModel",
                    "description": "On Track Period Details"
                },
                "user": {
                    "$ref": "#/definitions/UserModel",
                    "description": "User"
                }
            }
        },
        "UsersFilter": {
            "description": "Represents users filter.",
            "type": "object",
            "properties": {
                "username": {
                    "description": "User name",
                    "type": "string"
                },
                "email": {
                    "description": "Email address",
                    "type": "string"
                }
            }
        },
        "UserCreateModel": {
            "description": "Represents user for save",
            "type": "object",
            "properties": {
                "username": {
                    "description": "Username",
                    "type": "string"
                },
                "email": {
                    "description": "User email address",
                    "type": "string"
                },
                "password": {
                    "description": "Password",
                    "type": "string"
                },
                "branchIds": {
                    "description": "Branches to assign to the user",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "language": {
                    "description": "Gets or sets language",
                    "enum": [
                        "arabic",
                        "bosnian",
                        "bulgarian",
                        "croatian",
                        "czech",
                        "danish",
                        "dutch",
                        "english",
                        "english_uk",
                        "farsi",
                        "finnish",
                        "french",
                        "german",
                        "greek",
                        "hebrew",
                        "hungarian",
                        "indonesian",
                        "italian",
                        "japanese",
                        "kazakh",
                        "korean",
                        "lithuanian",
                        "norwegian",
                        "polish",
                        "portuguese",
                        "portuguese-br",
                        "romanian",
                        "russian",
                        "simplified_chinese",
                        "slovenian",
                        "spanish",
                        "spanish_latam",
                        "swedish",
                        "thai",
                        "turkish",
                        "ukrainian",
                        "french-canadian",
                        "slovak",
                        "user",
                        "persian"
                    ],
                    "type": "string"
                },
                "firstName": {
                    "description": "First name",
                    "type": "string"
                },
                "lastName": {
                    "description": "Last name",
                    "type": "string"
                },
                "isPasswordChangeRequired": {
                    "description": "Whether a user should change their password when they first sign in",
                    "type": "boolean"
                },
                "isEmailVerified": {
                    "description": "Determines if email is verified",
                    "type": "boolean"
                },
                "isActive": {
                    "description": "Determines if user is active",
                    "type": "boolean"
                },
                "isNotificationEmailRequired": {
                    "description": "Determines if notification emails should be sent to the user",
                    "type": "boolean"
                },
                "isUniqueUsernameRequired": {
                    "description": "Determines if unique username should be generated",
                    "type": "boolean"
                },
                "dateFormat": {
                    "description": "Date format",
                    "type": "string"
                },
                "timeZone": {
                    "description": "Time zone",
                    "type": "string"
                },
                "expirationDate": {
                    "format": "date-time",
                    "description": "Expiration date",
                    "type": "string"
                },
                "fields": {
                    "description": "Additional fields",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserAdditionalField"
                    }
                }
            }
        },
        "UserAdditionalField": {
            "description": "Represents user additional fields.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "Gets or sets identifier.",
                    "type": "integer"
                },
                "value": {
                    "description": "Gets or sets value.",
                    "type": "string"
                }
            }
        },
        "DataResult[UserModel]": {
            "description": "Represents generic data result.",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/UserModel",
                    "description": "Data."
                }
            }
        },
        "DataResult[ValidationResult]": {
            "description": "Represents generic data result.",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/ValidationResult",
                    "description": "Data."
                }
            }
        },
        "ValidationResult": {
            "description": "Validation result.",
            "type": "object",
            "properties": {
                "success": {
                    "description": "Gets the flag that determines if validation succeed.",
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "UserSaveModel": {
            "description": "Represents user for save",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "User identifier",
                    "type": "integer"
                },
                "email": {
                    "description": "User email address",
                    "type": "string"
                },
                "firstName": {
                    "description": "First name",
                    "type": "string"
                },
                "lastName": {
                    "description": "Last name",
                    "type": "string"
                },
                "username": {
                    "description": "Username",
                    "type": "string"
                },
                "password": {
                    "description": "Password",
                    "type": "string"
                },
                "avatarUri": {
                    "description": "Avatar url",
                    "type": "string"
                },
                "language": {
                    "description": "Gets or sets language",
                    "enum": [
                        "arabic",
                        "bosnian",
                        "bulgarian",
                        "croatian",
                        "czech",
                        "danish",
                        "dutch",
                        "english",
                        "english_uk",
                        "farsi",
                        "finnish",
                        "french",
                        "german",
                        "greek",
                        "hebrew",
                        "hungarian",
                        "indonesian",
                        "italian",
                        "japanese",
                        "kazakh",
                        "korean",
                        "lithuanian",
                        "norwegian",
                        "polish",
                        "portuguese",
                        "portuguese-br",
                        "romanian",
                        "russian",
                        "simplified_chinese",
                        "slovenian",
                        "spanish",
                        "spanish_latam",
                        "swedish",
                        "thai",
                        "turkish",
                        "ukrainian",
                        "french-canadian",
                        "slovak",
                        "user",
                        "persian"
                    ],
                    "type": "string"
                },
                "status": {
                    "description": "User status",
                    "enum": [
                        "pending",
                        "suspended",
                        "unsuspended"
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "User type",
                    "enum": [
                        "user",
                        "student",
                        "godadmin",
                        "admin",
                        "erpadmin"
                    ],
                    "type": "string"
                },
                "isConfirmed": {
                    "description": "Determines if user is confirmed",
                    "type": "boolean"
                },
                "isEmailValidated": {
                    "description": "Determines if email is confirmed",
                    "type": "boolean"
                },
                "createdDate": {
                    "format": "date-time",
                    "description": "User creation date",
                    "type": "string"
                },
                "lastAccessDate": {
                    "format": "date-time",
                    "description": "Last access date",
                    "type": "string"
                },
                "expirationDate": {
                    "format": "date-time",
                    "description": "Expiration date",
                    "type": "string"
                },
                "requestDate": {
                    "format": "date-time",
                    "description": "Request date",
                    "type": "string"
                },
                "fields": {
                    "description": "Additional fields",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserAdditionalField"
                    }
                }
            }
        },
        "UpdateAccountModel": {
            "properties": {
                "username": {
                    "description": "Gets or sets username.",
                    "type": "string"
                },
                "email": {
                    "description": "Gets or sets email address.",
                    "type": "string"
                },
                "isActive": {
                    "description": "Active flag",
                    "type": "boolean"
                }
            }
        },
        "UpdateBranchModel": {
            "properties": {
                "code": {
                    "description": "Branch code",
                    "type": "string"
                },
                "translations": {
                    "description": "Translations",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "parentId": {
                    "format": "int32",
                    "description": "Parent identifier",
                    "type": "integer"
                }
            }
        },
        "CourseUpdateModel": {
            "properties": {
                "name": {
                    "description": "Gets or sets Course Name",
                    "type": "string"
                },
                "description": {
                    "description": "Gets or sets Course Description",
                    "type": "string"
                },
                "code": {
                    "description": "Gets or sets Course Code",
                    "type": "string"
                }
            }
        },
        "UserUpdateModel": {
            "properties": {
                "username": {
                    "description": "Username",
                    "type": "string"
                },
                "email": {
                    "description": "User email address",
                    "type": "string"
                },
                "password": {
                    "description": "Password",
                    "type": "string"
                },
                "firstName": {
                    "description": "First name",
                    "type": "string"
                },
                "lastName": {
                    "description": "Last name",
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "language": {
                    "description": "Gets or sets language",
                    "enum": [
                        "arabic",
                        "bosnian",
                        "bulgarian",
                        "croatian",
                        "czech",
                        "danish",
                        "dutch",
                        "english",
                        "english_uk",
                        "farsi",
                        "finnish",
                        "french",
                        "german",
                        "greek",
                        "hebrew",
                        "hungarian",
                        "indonesian",
                        "italian",
                        "japanese",
                        "kazakh",
                        "korean",
                        "lithuanian",
                        "norwegian",
                        "polish",
                        "portuguese",
                        "portuguese-br",
                        "romanian",
                        "russian",
                        "simplified_chinese",
                        "slovenian",
                        "spanish",
                        "spanish_latam",
                        "swedish",
                        "thai",
                        "turkish",
                        "ukrainian",
                        "french-canadian",
                        "slovak",
                        "user",
                        "persian"
                    ],
                    "type": "string"
                },
                "isPasswordChangeRequired": {
                    "description": "Whether a user should change their password when they first sign in",
                    "type": "boolean"
                },
                "isEmailVerified": {
                    "description": "Determines if email is verified",
                    "type": "boolean"
                },
                "expirationDate": {
                    "format": "date-time",
                    "description": "Expiration date",
                    "type": "string"
                },
                "dateFormat": {
                    "description": "Date format",
                    "type": "string"
                },
                "timeZone": {
                    "description": "Time zone",
                    "type": "string"
                },
                "fields": {
                    "description": "Additional fields",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserAdditionalField"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "oauth2": {
            "type": "oauth2",
            "scopes": {
                "branches:create": "Create access to user's branches",
                "branches:read": "Read access to user's branches",
                "branches:update": "Update access to user's branch",
                "branches:delete": "Delete access to user's branch",
                "branches.users:create": "Create access to users of the branch",
                "branches.users:read": "Read access to users of the branch",
                "branches.users:delete": "Delete access to users of the branch",
                "users:create": "Create access to user resource",
                "users:read": "Read access to user resource",
                "users:update": "Update access to user resource",
                "users:delete": "Delete access to user resource",
                "users.learningobjects:read": "Read access to user's learningobjects",
                "courses.learningobjects:read": "Read access to course's learningobjects",
                "courses:read": "Read access to course resource",
                "courses.enrollments:create": "Create access to course's enrollments",
                "courses.enrollments:read": "Read access to course's enrollments",
                "courses.enrollments:delete": "Delete access to course's enrollments",
                "learningplans:read": "Read access to learning plan resource",
                "learningplans.enrollments:read": "Read access to learningplan's enrollments",
                "learningplans.enrollments:create": "Create access to learningplan's enrollments",
                "learningplans.enrollments:delete": "Delete access to learningplan's enrollments",
                "learningplans.courses:read": "Read access to learningplan's courses",
                "powerusers:create": "Create access to power user resource",
                "powerusers:delete": "Delete access to power user resource",
                "powerusers:update": "Update access to power user resource",
                "powerusers.courses:create": "Create access to power user's courses",
                "powerusers.courses:delete": "Delete access to power user's courses"
            }
        }
    }
}
